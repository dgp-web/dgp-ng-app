{"version":3,"file":"dgp-ng-app.js","sources":["ng:/dgp-ng-app/authentication/actions/authentication.actions.ts","ng:/dgp-ng-app/authentication/api-clients/authentication.api-client.ts","ng:/dgp-ng-app/authentication/models/authentication-store-feature.ts","ng:/dgp-ng-app/authentication/selectors/authentication.selectors.ts","ng:/dgp-ng-app/authentication/guards/authentication.guard.ts","ng:/dgp-ng-app/authentication/services/authentication.service.ts","ng:/dgp-ng-app/authentication/services/initialization.service.ts","ng:/dgp-ng-app/authentication/reducers/authentication.reducer.ts","ng:/dgp-ng-app/authentication/services/app-initializer.function.ts","ng:/dgp-ng-app/authentication/authentication.module.ts","ng:/dgp-ng-app/broadcast/actions/broadcast-channel.actions.ts","ng:/dgp-ng-app/broadcast/models/broadcast-role.model.ts","ng:/dgp-ng-app/broadcast/broadcast-store.ts","ng:/dgp-ng-app/broadcast/guards/no-peon.guard.ts","ng:/dgp-ng-app/broadcast/functions/create-guid.function.ts","ng:/dgp-ng-app/broadcast/models/broadcast-channel.model.ts","ng:/dgp-ng-app/broadcast/models/broadcast-role-display-config.model.ts","ng:/dgp-ng-app/broadcast/models/broadcast-config.model.ts","ng:/dgp-ng-app/broadcast/functions/prefix-action.function.ts","ng:/dgp-ng-app/broadcast/functions/should-prefix-action.function.ts","ng:/dgp-ng-app/broadcast/broadcast-store.decorator.ts","ng:/dgp-ng-app/broadcast/services/broadcast-channel-local-storage-fallback.service.ts","ng:/dgp-ng-app/broadcast/functions/get-broadcast-heartbeat-from-message-event.function.ts","ng:/dgp-ng-app/broadcast/services/broadcast-channel.service.ts","ng:/dgp-ng-app/broadcast/functions/create-broadcast-heartbeat.function.ts","ng:/dgp-ng-app/broadcast/functions/create-broadcast-participant.function.ts","ng:/dgp-ng-app/broadcast/functions/trim-incoming-broadcast-action.function.ts","ng:/dgp-ng-app/broadcast/functions/get-distinct-heartbeats-for-channel.function.ts","ng:/dgp-ng-app/broadcast/functions/get-heartbeat-form-oldest-participant.function.ts","ng:/dgp-ng-app/broadcast/functions/should-broadcast-participant-change-role.function.ts","ng:/dgp-ng-app/broadcast/functions/create-broadcast-action.function.ts","ng:/dgp-ng-app/broadcast/functions/filter-incoming-broadcast-action.function.ts","ng:/dgp-ng-app/broadcast/functions/should-update-browser-tab-broadcast-role-display.function.ts","ng:/dgp-ng-app/broadcast/functions/filter-action-to-prefix-with-leader.predicate.ts","ng:/dgp-ng-app/broadcast/effects/broadcast.effects.ts","ng:/dgp-ng-app/broadcast/broadcast-store.module.ts","ng:/dgp-ng-app/empty-state/components/empty-state.component.ts","ng:/dgp-ng-app/empty-state/components/empty-state-content.component.ts","ng:/dgp-ng-app/empty-state/components/empty-state-icon.component.ts","ng:/dgp-ng-app/empty-state/components/empty-state-title.component.ts","ng:/dgp-ng-app/empty-state/empty-state.module.ts","ng:/dgp-ng-app/file-viewer/models.ts","ng:/dgp-ng-app/file-viewer/functions.ts","ng:/dgp-ng-app/file-upload/functions.ts","ng:/dgp-ng-app/file-viewer/components/fallback-file-viewer.component.ts","ng:/dgp-ng-app/file-viewer/components/file-item-list.component.ts","ng:/dgp-ng-app/file-viewer/components/file-viewer.component-base.ts","ng:/dgp-ng-app/file-viewer/components/file-viewer.component.ts","ng:/dgp-ng-app/file-viewer/components/dynamic-file-viewer.component.ts","ng:/dgp-ng-app/file-viewer/components/jpg-viewer.component.ts","ng:/dgp-ng-app/file-viewer/components/pdf-viewer.component.ts","ng:/dgp-ng-app/file-viewer/components/png-viewer.component.ts","ng:/dgp-ng-app/file-viewer/components/svg-viewer.component.ts","ng:/dgp-ng-app/file-viewer/safe.pipe.ts","ng:/dgp-ng-app/spacer/components/spacer.component.ts","ng:/dgp-ng-app/spacer/spacer.module.ts","ng:/dgp-ng-app/file-viewer/file-viewer.module.ts","ng:/dgp-ng-app/file-upload/actions.ts","ng:/dgp-ng-app/file-upload/directive/drag-file-listener.directive.ts","ng:/dgp-ng-app/file-upload/models.ts","ng:/dgp-ng-app/file-upload/selectors.ts","ng:/dgp-ng-app/file-upload/directive/open-file-manager-via-short-key.directive.ts","ng:/dgp-ng-app/file-upload/store.ts","ng:/dgp-ng-app/file-upload/containers/file-manager.component.ts","ng:/dgp-ng-app/file-upload/effects.ts","ng:/dgp-ng-app/request-store/models/request-store-state.model.ts","ng:/dgp-ng-app/request-store/selectors/request.selectors.ts","ng:/dgp-ng-app/hamburger-shell/components/page-header/page-header.component.ts","ng:/dgp-ng-app/hamburger-shell/components/page-header/page-header.module.ts","ng:/dgp-ng-app/hamburger-shell/actions/hamburger-shell.actions.ts","ng:/dgp-ng-app/hamburger-shell/models/hamburger-shell.store-feature.ts","ng:/dgp-ng-app/hamburger-shell/selectors/hamburger-shell.selectors.ts","ng:/dgp-ng-app/hamburger-shell/components/list-details-page/list-details-page.component.ts","ng:/dgp-ng-app/hamburger-shell/components/list-details-page/list-details-page-content.component.ts","ng:/dgp-ng-app/hamburger-shell/components/list-details-page/list-details-page.module.ts","ng:/dgp-ng-app/file-upload/file-upload.module.ts","ng:/dgp-ng-app/hamburger-shell/components/hamburger-shell.component.ts","ng:/dgp-ng-app/hamburger-shell/components/hamburger-menu-toggle/hamburger-menu-toggle.component.ts","ng:/dgp-ng-app/hamburger-shell/components/hamburger-menu-toggle/hamburger-menu-toggle.module.ts","ng:/dgp-ng-app/hamburger-shell/models/hamburger-shell-config.model.ts","ng:/dgp-ng-app/hamburger-shell/models/hamburger-shell-config-provider.model.ts","ng:/dgp-ng-app/hamburger-shell/reducers/hamburger-shell.reducer.ts","ng:/dgp-ng-app/hamburger-shell/effects/hamburger-shell.effects.ts","ng:/dgp-ng-app/hamburger-shell/hamburger-shell.module.ts","ng:/dgp-ng-app/hmr/hmr.actions.ts","ng:/dgp-ng-app/hmr/hmr.reducer.ts","ng:/dgp-ng-app/hmr/hmr-app.ts","ng:/dgp-ng-app/log/actions/log.actions.ts","ng:/dgp-ng-app/log/models/log.models.ts","ng:/dgp-ng-app/log/reducers/log.reducer.ts","ng:/dgp-ng-app/log/selectors/log.selectors.ts","ng:/dgp-ng-app/log/components/log-page.component.ts","ng:/dgp-ng-app/log/components/log-entry-list.component.ts","ng:/dgp-ng-app/log/components/log-entry-details.component.ts","ng:/dgp-ng-app/log/effects/log.effects.ts","ng:/dgp-ng-app/log/log.module.ts","ng:/dgp-ng-app/request-store/actions/request.actions.ts","ng:/dgp-ng-app/request-store/reducers/request.reducer.ts","ng:/dgp-ng-app/request-store/reducers/reducer.ts","ng:/dgp-ng-app/request-store/functions/observe-request.function.ts","ng:/dgp-ng-app/request-store/effects/request.effects.ts","ng:/dgp-ng-app/request-store/request-store.module.ts","ng:/dgp-ng-app/routing-overlay/actions/routing-overlay.actions.ts","ng:/dgp-ng-app/routing-overlay/components/routing-overlay.component.ts","ng:/dgp-ng-app/routing-overlay/effects/routing-overlay.effects.ts","ng:/dgp-ng-app/routing-overlay/routing-overlay.module.ts","ng:/dgp-ng-app/table-cell-editor/directives/table-cell-editor.directive.ts","ng:/dgp-ng-app/table-cell-editor/functions.ts","ng:/dgp-ng-app/table-cell-editor/components/table-cell.component.ts","ng:/dgp-ng-app/table-cell-editor/table-cell.module.ts","ng:/dgp-ng-app/theme-switcher/actions/theme-switcher.actions.ts","ng:/dgp-ng-app/theme-switcher/models/theme-switcher-store-feature.model.ts","ng:/dgp-ng-app/theme-switcher/selectors/theme-switcher.selectors.ts","ng:/dgp-ng-app/theme-switcher/components/dark-mode-toggle.component.ts","ng:/dgp-ng-app/theme-switcher/models/theme-switcher-config.model.ts","ng:/dgp-ng-app/theme-switcher/directives/theme-host.directive.ts","ng:/dgp-ng-app/theme-switcher/effects/theme-switcher.effects.ts","ng:/dgp-ng-app/theme-switcher/reducers/theme-switcher.reducer.ts","ng:/dgp-ng-app/theme-switcher/theme-switcher.module.ts","ng:/dgp-ng-app/utils/container.component-base.ts","ng:/dgp-ng-app/utils/model-editor.component-base.ts","ng:/dgp-ng-app/utils/select-entity-via-route.resolver-base.ts","ng:/dgp-ng-app/virtual-list-panel/directives/virtual-list-item.directive.ts","ng:/dgp-ng-app/virtual-list-panel/components/virtual-list-panel.component.ts","ng:/dgp-ng-app/virtual-list-panel/virtual-list-panel.module.ts","ng:/dgp-ng-app/dgp-ng-app.module.ts","ng:/dgp-ng-app/public-api.ts","ng:/dgp-ng-app/dgp-ng-app.ts"],"names":["_.uniqBy","_.isEqual","_.minBy"],"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","sourcesContent":["import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const authenticateUser = createAction(\"[Authentication] AuthenticateUser\", props<{ readonly user: any; }>());\r\nexport const cacheInitialUrl = createAction(\"[Authentication] CacheInitialUrl\", props<{ readonly initialUrl: string }>());\r\nexport const registerAuthenticateError = createAction(\"[Authentication] RegisterAuthenticationError\", props<{ readonly error: any }>());\r\n","import { ClassProvider } from \"@angular/core\";\r\n\r\n/**\r\n * Service for authenticating the user\r\n */\r\nexport abstract class AuthenticationApiClient<TUser = any> {\r\n\r\n    /**\r\n     * Returns the user via a means of\r\n     * authentication\r\n     */\r\n    abstract authenticate$(): Promise<TUser>;\r\n\r\n}\r\n\r\nexport interface AuthenticationApiClientProvider extends ClassProvider {\r\n    provide: typeof AuthenticationApiClient;\r\n}\r\n","export const authenticationStoreFeature = \"Authentication\";","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { authenticationStoreFeature } from \"../models/authentication-store-feature\";\r\nimport { AuthenticationState } from \"../models/authentication-result.model\";\r\n\r\nexport const authenticationFeatureSelector = createFeatureSelector<AuthenticationState>(authenticationStoreFeature);\r\n\r\nexport const getIsAuthenticatedSelector = createSelector(\r\n    authenticationFeatureSelector,\r\n    x => x.success\r\n);\r\nexport const getAuthenticatedUserSelector = createSelector(\r\n    authenticationFeatureSelector,\r\n    x => x.user\r\n);\r\nexport const getCachedInitialUrlSelector = createSelector(\r\n    authenticationFeatureSelector,\r\n    x => x.initialUrl\r\n);\r\n\r\nexport const hasCachedInitialUrlSelector = createSelector(\r\n    getCachedInitialUrlSelector,\r\n    x => !isNullOrUndefined(x)\r\n);\r\n","import { first } from \"rxjs/operators\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { cacheInitialUrl } from \"../actions/authentication.actions\";\r\nimport { getIsAuthenticatedSelector, hasCachedInitialUrlSelector } from \"../selectors/authentication.selectors\";\r\nimport { AuthenticationState } from \"../models/authentication-result.model\";\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly store: Store<AuthenticationState>,\r\n        private readonly router: Router\r\n    ) {\r\n    }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot,\r\n                      state: RouterStateSnapshot): Promise<boolean> {\r\n\r\n        const hasInitialUrl = await this.store.pipe(\r\n            select(hasCachedInitialUrlSelector),\r\n            first()\r\n        )\r\n            .toPromise();\r\n\r\n        if (!hasInitialUrl) {\r\n            this.store.dispatch(cacheInitialUrl({ initialUrl: state.url }));\r\n        }\r\n\r\n        return this.store.pipe(\r\n            select(getIsAuthenticatedSelector),\r\n            first()\r\n        )\r\n            .toPromise();\r\n\r\n    }\r\n\r\n}\r\n","import { empty, forkJoin, from } from \"rxjs\";\r\nimport { catchError, defaultIfEmpty, switchMap, tap } from \"rxjs/operators\";\r\nimport { ClassProvider, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { authenticateUser, registerAuthenticateError } from \"../actions/authentication.actions\";\r\nimport { AuthenticationApiClient } from \"../api-clients/authentication.api-client\";\r\nimport { PostAuthenticationTask } from \"../models/post-authentication-task.model\";\r\nimport { AuthenticationState } from \"../models/authentication-result.model\";\r\n\r\nexport abstract class AuthenticationService<TUser = any> {\r\n\r\n    abstract authenticate$(): Promise<void>;\r\n\r\n    abstract registerPostAuthenticationTask(task: PostAuthenticationTask<TUser>): void;\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationServiceImpl<TUser> implements AuthenticationService<TUser> {\r\n\r\n    private readonly postAuthenticationTasks: PostAuthenticationTask<TUser>[] = [];\r\n\r\n    constructor(private readonly store: Store<AuthenticationState>,\r\n                private readonly authenticationApiClient: AuthenticationApiClient) {\r\n    }\r\n\r\n    authenticate$(): Promise<void> {\r\n\r\n        return from(\r\n            this.authenticationApiClient.authenticate$()\r\n        )\r\n            .pipe(\r\n                tap(user => {\r\n                    this.store.dispatch(authenticateUser({ user }));\r\n                }),\r\n                switchMap(user => {\r\n\r\n                    const requests$ = this.postAuthenticationTasks.map(task => {\r\n                        return from(task(user));\r\n                    });\r\n\r\n                    return forkJoin(requests$);\r\n                }),\r\n                catchError((error: any) => {\r\n                    this.store.dispatch(registerAuthenticateError({ error }));\r\n                    return empty();\r\n                }),\r\n                defaultIfEmpty(null)\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n    registerPostAuthenticationTask(task: PostAuthenticationTask<TUser>): void {\r\n        this.postAuthenticationTasks.push(task);\r\n    }\r\n\r\n}\r\n\r\nexport const authenticationServiceProvider: ClassProvider = {\r\n    provide: AuthenticationService,\r\n    useClass: AuthenticationServiceImpl\r\n};\r\n","import { ClassProvider } from \"@angular/core\";\r\n\r\n/**\r\n * Service that runs tasks once the user is authenticated\r\n * but before the application actually starts.\r\n *\r\n * Use for downloading basic data or load user settings.\r\n */\r\nexport abstract class InitializationService<TUser = any> {\r\n\r\n    /**\r\n     * Runs tasks on app start\r\n     */\r\n    abstract runPostAuthenticationTask$(user: TUser): Promise<void>;\r\n\r\n}\r\n\r\nexport interface InitializationServiceProvider extends ClassProvider {\r\n    provide: typeof InitializationService;\r\n}\r\n","import { ActionReducer, createReducer, on } from \"@ngrx/store\";\r\nimport { FactoryProvider, InjectionToken } from \"@angular/core\";\r\nimport { AuthenticationState } from \"../models/authentication-result.model\";\r\nimport { authenticateUser, cacheInitialUrl, registerAuthenticateError } from \"../actions/authentication.actions\";\r\n\r\nexport const initialAuthenticationState: AuthenticationState = {\r\n    user: null,\r\n    success: null,\r\n    error: null,\r\n    initialUrl: null\r\n};\r\n\r\nexport const authenticationReducerImpl = createReducer(\r\n    initialAuthenticationState, on(\r\n        authenticateUser, (state, action) => {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                success: true\r\n            };\r\n        }\r\n    ), on(cacheInitialUrl, (state, action) => {\r\n        return {\r\n            ...state,\r\n            initialUrl: action.initialUrl\r\n        };\r\n    }), on(registerAuthenticateError, (state, action) => {\r\n        return {\r\n            ...state,\r\n            error: action.error,\r\n            success: false\r\n        };\r\n    })\r\n);\r\n\r\n\r\nexport const authenticationReducer = new InjectionToken<ActionReducer<AuthenticationState>>(\"authenticationReducer\");\r\n\r\nexport function authenticationReducerFactory() {\r\n    return authenticationReducerImpl;\r\n}\r\n\r\nexport const authenticationReducerProvider: FactoryProvider = {\r\n    provide: authenticationReducer,\r\n    useFactory: authenticationReducerFactory\r\n};\r\n\r\n","import { APP_INITIALIZER, FactoryProvider } from \"@angular/core\";\r\nimport { InitializationService } from \"./initialization.service\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n/**\r\n * Logic executed before the app loads\r\n */\r\nexport function appInitializer<TUser>(authenticationService: AuthenticationService<TUser>,\r\n                                      initializationService: InitializationService): () => Promise<void> {\r\n\r\n    authenticationService.registerPostAuthenticationTask((user: TUser) => {\r\n        return initializationService.runPostAuthenticationTask$(user);\r\n    });\r\n\r\n    return () => {\r\n\r\n        return authenticationService\r\n            .authenticate$();\r\n\r\n    };\r\n\r\n}\r\n\r\nexport const appInitializerProvider: FactoryProvider = {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: appInitializer,\r\n    deps: [\r\n        AuthenticationService,\r\n        InitializationService\r\n    ],\r\n    multi: true\r\n};\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { InitializationServiceProvider } from \"./services/initialization.service\";\r\nimport { authenticationStoreFeature } from \"./models/authentication-store-feature\";\r\nimport { AuthenticationApiClientProvider } from \"./api-clients/authentication.api-client\";\r\nimport { authenticationReducer, authenticationReducerProvider } from \"./reducers/authentication.reducer\";\r\nimport { appInitializerProvider } from \"./services/app-initializer.function\";\r\nimport { AuthenticationGuard } from \"./guards/authentication.guard\";\r\nimport { authenticationServiceProvider } from \"./services/authentication.service\";\r\n\r\nexport interface AuthenticationModuleSettings {\r\n    readonly authenticationApiClientProvider: AuthenticationApiClientProvider;\r\n    readonly initializationServiceProvider: InitializationServiceProvider;\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        StoreModule.forFeature(\r\n            authenticationStoreFeature,\r\n            authenticationReducer\r\n        )\r\n    ],\r\n    providers: [\r\n        appInitializerProvider,\r\n        authenticationReducerProvider,\r\n        AuthenticationGuard,\r\n        authenticationServiceProvider\r\n    ]\r\n})\r\nexport class DgpAuthenticationModule {\r\n\r\n    static forRoot(settings: AuthenticationModuleSettings): ModuleWithProviders<DgpAuthenticationModule> {\r\n        return {\r\n            ngModule: DgpAuthenticationModule,\r\n            providers: [\r\n                settings.authenticationApiClientProvider,\r\n                settings.initializationServiceProvider,\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n","import { Action, createAction, props } from \"@ngrx/store\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\n\r\nexport const setOwnBroadcastRoleActionType = \"[BroadcastChannel] SetOwnRole\";\r\n\r\nexport class SetOwnBroadcastRoleAction implements Action {\r\n    readonly type = setOwnBroadcastRoleActionType;\r\n\r\n    constructor(\r\n        public readonly payload: BroadcastRole\r\n    ) {\r\n    }\r\n}\r\n\r\nexport const setOwnBroadcastRole = createAction(setOwnBroadcastRoleActionType, props<{ broadcastRole: BroadcastRole }>());\r\n\r\nexport const setBroadcastChannelDataIdActionType = \"[BroadcastChannel] SetSelectedDataId\";\r\n\r\nexport class SetBroadcastChannelDataIdAction implements Action {\r\n    readonly type = setBroadcastChannelDataIdActionType;\r\n\r\n    constructor(\r\n        public readonly payload: any\r\n    ) {\r\n    }\r\n}\r\n\r\nexport const setBroadcastChannelDataId = createAction(setBroadcastChannelDataIdActionType, props<{ readonly payload: any; }>());\r\n\r\nexport const requestInitialData = createAction(\"[BroadcastChannel] RequestInitialData\");\r\n\r\nexport const leaderActionTypePrefix = \"[Leader] \";\r\nexport const peonActionTypePrefix = \"[Peon] \";\r\nexport const compositeActionTypePrefix = \"[Composite] \";\r\nexport const trackRequestActionTypePrefix = \"[Request] \";\r\n","export enum BroadcastRole {\r\n    None,\r\n    Leader,\r\n    Peon\r\n}\r\n","import { ActionReducerMap, createFeatureSelector, createReducer, createSelector, on } from \"@ngrx/store\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { FactoryProvider, InjectionToken } from \"@angular/core\";\r\nimport { BroadcastRole } from \"./models/broadcast-role.model\";\r\nimport { setOwnBroadcastRole } from \"./actions/broadcast-channel.actions\";\r\n\r\nexport const broadcastStoreFeature = \"Broadcast\";\r\nexport const broadcastStoreFeatureSelector = createFeatureSelector(broadcastStoreFeature);\r\n\r\nexport interface BroadcastState {\r\n    readonly ownRole: BroadcastRole;\r\n}\r\n\r\nexport const broadcastReducer = new InjectionToken<ActionReducerMap<BroadcastState>>(\"BroadcastStoreReducer\");\r\n\r\nexport const broadcastReducerImpl = createReducer<BroadcastState>(\r\n    {ownRole: BroadcastRole.None},\r\n    on(setOwnBroadcastRole, (state, action) => {\r\n        return {\r\n            ownRole: action.broadcastRole\r\n        };\r\n    })\r\n);\r\n\r\nexport function broadcastReducerFactory() {\r\n    return broadcastReducerImpl;\r\n}\r\n\r\nexport const broadcastReducerProvider: FactoryProvider = {\r\n    provide: broadcastReducer,\r\n    useFactory: broadcastReducerFactory\r\n};\r\n\r\n\r\nexport const getOwnBroadcastRoleSelector = createSelector(\r\n    broadcastStoreFeatureSelector, (x: BroadcastState) => {\r\n        if (isNullOrUndefined(x)) {\r\n            return null;\r\n        }\r\n\r\n        return x.ownRole;\r\n    }\r\n);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BroadcastState, getOwnBroadcastRoleSelector } from \"../broadcast-store\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\n\r\n@Injectable()\r\nexport class NoPeonGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private readonly store: Store<BroadcastState>\r\n    ) {\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n        return this.store.pipe(\r\n            select(getOwnBroadcastRoleSelector),\r\n            map((role: BroadcastRole) => {\r\n                return role !== BroadcastRole.Peon;\r\n            })\r\n        );\r\n    }\r\n\r\n}\r\n","export function createGuid() {\r\n    // @ts-ignore\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n        // tslint:disable-next-line:no-bitwise\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n}\r\n","import { BroadcastParticipant } from \"./broadcast-participant.model\";\r\n\r\nexport interface DataBroadcastChannel extends BroadcastParticipant {\r\n    readonly dataId?: any;\r\n}\r\n\r\nexport const heartbeatBroadcastChannelId = \"HeartbeatBroadcastChannel\";\r\nexport const actionBroadcastChannelId = \"ActionBroadcastChannel\";\r\n","export interface BroadcastRoleDisplayConfig {\r\n    readonly leaderBrowserTabTitleSuffix: string;\r\n    readonly peonBrowserTabTitleSuffix: string;\r\n}\r\n\r\nexport const defaultBroadcastRoleDisplayConfig: BroadcastRoleDisplayConfig = {\r\n    leaderBrowserTabTitleSuffix: \": Leader\",\r\n    peonBrowserTabTitleSuffix: \": Peon\"\r\n};\r\n","import { actionBroadcastChannelId, heartbeatBroadcastChannelId } from \"./broadcast-channel.model\";\r\nimport { InjectionToken } from \"@angular/core\";\r\nimport { BroadcastRoleDisplayConfig, defaultBroadcastRoleDisplayConfig } from \"./broadcast-role-display-config.model\";\r\nimport { ComposedEntityActions, EntityStateMap, EntityTypeMap } from \"entity-store\";\r\n\r\nexport type SendInitialStateSignature<TEntityTypeMap extends EntityTypeMap, TStoreFeature = string> = (\r\n    state: EntityStateMap<TEntityTypeMap>\r\n) => ComposedEntityActions<TEntityTypeMap, TStoreFeature>;\r\n\r\nexport interface BroadcastConfig<TEntityTypeMap extends EntityTypeMap = { [key: string]: any; }, TStoreFeature = string> {\r\n    /**\r\n     * The interval at which this participant sends\r\n     * heartbeats\r\n     *\r\n     * default: 1000 ms\r\n     */\r\n    readonly heartbeartBroadcastInterval: number;\r\n    /**\r\n     * The interval at which this participant buffers\r\n     * incoming heartbeats before checking the current\r\n     * roles\r\n     *\r\n     * default: 3000 ms\r\n     */\r\n    readonly incomingHeartbeatBufferInterval: number;\r\n    /**\r\n     * Id of the channel the broadcasts this participant's heartbeats\r\n     */\r\n    readonly heartbeatBroadcastChannelId: string;\r\n    /**\r\n     * Id of the channel the broadcasts this participant's actions\r\n     */\r\n    readonly actionBroadcastChannelId: string;\r\n\r\n    /**\r\n     * Action types to prefix\r\n     */\r\n    readonly actionTypesToPrefixWithPeon: ReadonlyArray<string>;\r\n\r\n    /**\r\n     * Indicates whether and how browser-tab titles are used\r\n     * to indicate status\r\n     */\r\n    readonly updateBrowserTabTitleConfig?: BroadcastRoleDisplayConfig;\r\n\r\n    readonly sendInitialState?: SendInitialStateSignature<TEntityTypeMap, TStoreFeature>;\r\n}\r\n\r\nexport const defaultBroadcastConfig: BroadcastConfig = {\r\n    heartbeartBroadcastInterval: 1000,\r\n    incomingHeartbeatBufferInterval: 3000,\r\n    heartbeatBroadcastChannelId,\r\n    actionBroadcastChannelId,\r\n    actionTypesToPrefixWithPeon: [],\r\n    updateBrowserTabTitleConfig: defaultBroadcastRoleDisplayConfig\r\n};\r\n\r\nexport const BROADCAST_CONFIG = new InjectionToken<Readonly<BroadcastConfig>>(\r\n    \"DEFAULT_BROADCAST_CONFIG\"\r\n);\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nexport interface PrefixActionPayload {\r\n    readonly prefix: string;\r\n    readonly action: Readonly<Action>;\r\n}\r\n\r\nexport function prefixAction<T extends Action>(payload: PrefixActionPayload): T {\r\n\r\n    return Object.assign({}, payload.action, {\r\n        type: payload.prefix + payload.action.type\r\n    }) as T;\r\n\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\n\r\nexport interface ShouldPrefixActionPayload {\r\n    readonly action: Readonly<Action>;\r\n    readonly actualBroadcastRole: BroadcastRole;\r\n    readonly triggeringBroadcastRole: BroadcastRole;\r\n    readonly triggeringActionPrefixes: ReadonlyArray<string>;\r\n}\r\n\r\nexport function shouldPrefixAction(payload: ShouldPrefixActionPayload): boolean {\r\n\r\n    if (payload.actualBroadcastRole === payload.triggeringBroadcastRole) {\r\n\r\n        if (payload.triggeringActionPrefixes.some(actionPrefix => {\r\n            return payload.action.type.startsWith(actionPrefix);\r\n        })) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n","import { Action, ActionsSubject, ReducerManager, select, StateObservable, Store } from \"@ngrx/store\";\r\nimport { ClassProvider, Inject, Injectable } from \"@angular/core\";\r\nimport { getOwnBroadcastRoleSelector } from \"./broadcast-store\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { prefixAction } from \"./functions/prefix-action.function\";\r\nimport { peonActionTypePrefix } from \"./actions/broadcast-channel.actions\";\r\nimport { BroadcastRole } from \"./models/broadcast-role.model\";\r\nimport { BROADCAST_CONFIG, BroadcastConfig } from \"./models/broadcast-config.model\";\r\nimport { shouldPrefixAction } from \"./functions/should-prefix-action.function\";\r\n\r\n@Injectable()\r\nexport class BroadcastStoreDecorator<T> extends Store<T> {\r\n\r\n    broadcastRole: BroadcastRole;\r\n    private ownBroadcastRoleSubscription: Subscription;\r\n\r\n    constructor(\r\n        @Inject(StateObservable)\r\n            state$: StateObservable,\r\n        @Inject(ActionsSubject)\r\n            actionsObserver: ActionsSubject,\r\n        @Inject(ReducerManager)\r\n            reducerManager: ReducerManager,\r\n        @Inject(BROADCAST_CONFIG)\r\n        private config: BroadcastConfig) {\r\n        super(state$, actionsObserver, reducerManager);\r\n\r\n        this.ownBroadcastRoleSubscription = state$.pipe(\r\n            select(getOwnBroadcastRoleSelector)\r\n        ).subscribe(x => {\r\n            this.broadcastRole = x;\r\n        }, (e) => {\r\n            throw e;\r\n        });\r\n\r\n    }\r\n\r\n    dispatch<V extends Action = Action>(action: V): void {\r\n\r\n        let localAction = action;\r\n\r\n        const shouldPrefixActionWithPeonResult = shouldPrefixAction({\r\n            action,\r\n            actualBroadcastRole: this.broadcastRole,\r\n            triggeringBroadcastRole: BroadcastRole.Peon,\r\n            triggeringActionPrefixes: this.config.actionTypesToPrefixWithPeon\r\n        });\r\n\r\n        if (shouldPrefixActionWithPeonResult) {\r\n            localAction = prefixAction({\r\n                action: localAction,\r\n                prefix: peonActionTypePrefix\r\n            });\r\n        }\r\n\r\n        super.dispatch(localAction as any);\r\n\r\n    }\r\n\r\n    next<V extends Action = Action>(action: V): void {\r\n\r\n        let localAction = action;\r\n\r\n        const shouldPrefixActionWithPeonResult = shouldPrefixAction({\r\n            action,\r\n            actualBroadcastRole: this.broadcastRole,\r\n            triggeringBroadcastRole: BroadcastRole.Peon,\r\n            triggeringActionPrefixes: this.config.actionTypesToPrefixWithPeon\r\n        });\r\n\r\n        if (shouldPrefixActionWithPeonResult) {\r\n            localAction = prefixAction({\r\n                action: localAction,\r\n                prefix: peonActionTypePrefix\r\n            });\r\n        }\r\n\r\n        super.next(localAction);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const broadcastStoreProvider: ClassProvider = {\r\n    provide: Store,\r\n    useClass: BroadcastStoreDecorator\r\n};\r\n","import { isNullOrUndefined } from \"util\";\r\nimport { BroadcastChannelLike } from \"../models/broadcast-channel-like.model\";\r\n\r\nexport class BroadcastChannelLocalStorageFallbackService implements BroadcastChannelLike {\r\n\r\n    constructor(private readonly channelId: string) {\r\n    }\r\n\r\n    addEventListener(type, listener, options?: boolean | AddEventListenerOptions): void {\r\n        window.addEventListener(\"storage\", (ev: StorageEvent) => {\r\n            if (ev.key !== this.channelId) { return; }\r\n            if (isNullOrUndefined(ev.newValue)) { return; }\r\n\r\n            const message = JSON.parse(ev.newValue);\r\n            listener({\r\n                data: message\r\n            });\r\n        });\r\n    }\r\n\r\n    postMessage(message: any): void {\r\n        const messageJson = JSON.stringify(message);\r\n        window.localStorage.setItem(this.channelId, messageJson);\r\n    }\r\n\r\n}\r\n","import { isDate } from \"util\";\r\nimport { MessageEventLike } from \"../models/broadcast-channel-like.model\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\n\r\n/**\r\n * Parses heartbeats from message events\r\n *\r\n * This is needed to ensure that the objects resulting from broadcast channels\r\n * and local storage look the same\r\n *\r\n * @param messageEvent\r\n */\r\nexport function getBroadcastHeartbeatFromMessageEvent(messageEvent: MessageEventLike): BroadcastHeartbeat {\r\n    return {\r\n        dataId: messageEvent.data.dataId,\r\n        participantId: messageEvent.data.participantId,\r\n        participantCreationDate: isDate(messageEvent.data.participantCreationDate) ?\r\n            messageEvent.data.participantCreationDate : new Date(messageEvent.data.participantCreationDate as string)\r\n    };\r\n}\r\n","import {Observable, fromEventPattern} from \"rxjs\";\r\nimport {ClassProvider, Inject, Injectable} from \"@angular/core\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {BroadcastChannelLocalStorageFallbackService} from \"./broadcast-channel-local-storage-fallback.service\";\r\nimport { BroadcastChannelLike, MessageEventLike } from \"../models/broadcast-channel-like.model\";\r\nimport { getBroadcastHeartbeatFromMessageEvent } from \"../functions/get-broadcast-heartbeat-from-message-event.function\";\r\nimport { BroadcastAction } from \"../models/broadcast-action.model\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\nimport { BROADCAST_CONFIG, BroadcastConfig } from \"../models/broadcast-config.model\";\r\n\r\nexport abstract class BroadcastChannelService {\r\n\r\n    abstract postHeartbeat(heartbeat: BroadcastHeartbeat): void;\r\n\r\n    abstract postAction(action: BroadcastAction): void;\r\n\r\n    abstract getHeartbeat$(): Observable<BroadcastHeartbeat>;\r\n\r\n    abstract getAction$(): Observable<BroadcastAction>;\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class BroadcastChannelServiceImpl extends BroadcastChannelService {\r\n\r\n    private readonly heartbeatBroadcastChannel: BroadcastChannelLike;\r\n    private readonly actionBroadcastChannel: BroadcastChannelLike;\r\n\r\n    constructor(\r\n        @Inject(BROADCAST_CONFIG)\r\n        private readonly config: BroadcastConfig\r\n    ) {\r\n        super();\r\n\r\n        if (\"BroadcastChannel\" in self) {\r\n\r\n            this.heartbeatBroadcastChannel = new BroadcastChannel(\r\n                this.config.heartbeatBroadcastChannelId\r\n            );\r\n            this.actionBroadcastChannel = new BroadcastChannel(\r\n                this.config.actionBroadcastChannelId\r\n            );\r\n\r\n        } else {\r\n            this.heartbeatBroadcastChannel = new BroadcastChannelLocalStorageFallbackService(\r\n                this.config.heartbeatBroadcastChannelId\r\n            );\r\n            this.actionBroadcastChannel = new BroadcastChannelLocalStorageFallbackService(\r\n                this.config.actionBroadcastChannelId\r\n            );\r\n        }\r\n    }\r\n\r\n    private addBroadcastListenerForHeartbeat = (handler) => {\r\n        this.heartbeatBroadcastChannel.addEventListener(\"message\", handler);\r\n    }\r\n\r\n    private addBroadcastListenerForAction = (handler) => {\r\n        this.actionBroadcastChannel.addEventListener(\"message\", handler);\r\n    }\r\n\r\n\r\n    getAction$(): Observable<BroadcastAction> {\r\n        return fromEventPattern(\r\n            this.addBroadcastListenerForAction\r\n        ).pipe(\r\n            map((messageEvent: MessageEventLike) => messageEvent.data as BroadcastAction)\r\n        );\r\n    }\r\n\r\n    getHeartbeat$(): Observable<BroadcastHeartbeat> {\r\n        return fromEventPattern(\r\n            this.addBroadcastListenerForHeartbeat\r\n        ).pipe(\r\n            map(getBroadcastHeartbeatFromMessageEvent)\r\n        );\r\n    }\r\n\r\n    postAction(action: BroadcastAction): void {\r\n        this.actionBroadcastChannel.postMessage(action);\r\n    }\r\n\r\n    postHeartbeat(heartbeat: BroadcastHeartbeat): void {\r\n        this.heartbeatBroadcastChannel.postMessage(heartbeat);\r\n    }\r\n\r\n}\r\n\r\nexport const broadcastChannelServiceProvider: ClassProvider = {\r\n    provide: BroadcastChannelService,\r\n    useClass: BroadcastChannelServiceImpl\r\n};\r\n","import { BroadcastParticipant } from \"../models/broadcast-participant.model\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\n\r\nexport interface CreateBroadcastHeartbeatPayload {\r\n    readonly participant: Readonly<BroadcastParticipant>;\r\n    readonly dataId?: any;\r\n}\r\n\r\nexport function createBroadcastHeartbeat(\r\n    payload: CreateBroadcastHeartbeatPayload\r\n): BroadcastHeartbeat {\r\n    return {\r\n        participantId: payload.participant.participantId,\r\n        participantCreationDate: payload.participant.participantCreationDate,\r\n        dataId: payload.dataId,\r\n    };\r\n}\r\n","import { createGuid } from \"./create-guid.function\";\r\nimport { BroadcastParticipant } from \"../models/broadcast-participant.model\";\r\n\r\nexport function createBroadcastParticipant(): BroadcastParticipant {\r\n    return {\r\n        participantId: createGuid(),\r\n        participantCreationDate: new Date()\r\n    };\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\nimport { leaderActionTypePrefix, peonActionTypePrefix } from \"../actions/broadcast-channel.actions\";\r\n\r\nexport function trimIncomingBroadcastAction(action: Action) {\r\n\r\n    if (action.type.startsWith(peonActionTypePrefix)) {\r\n        return Object.assign({}, action, {\r\n            type: action.type.replace(peonActionTypePrefix, \"\")\r\n        } as Action) as Action;\r\n    } else if (action.type.startsWith(leaderActionTypePrefix)) {\r\n        return Object.assign({}, action, {\r\n            type: action.type.replace(leaderActionTypePrefix, \"\")\r\n        } as Action) as Action;\r\n    } else {\r\n        throw Error(\"Broadcasted actions must either be marked as Peon or Leader actions\");\r\n    }\r\n}\r\n","import {isNullOrUndefined} from \"util\";\r\nimport * as _ from \"lodash\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\n\r\nexport interface GetDistinctHeartbeatsForChannelPayload {\r\n    readonly channelDataId?: any;\r\n    readonly heartbeats: ReadonlyArray<BroadcastHeartbeat>;\r\n}\r\n\r\n/**\r\n * Returns distinct heartbeats for a given data channel\r\n *\r\n * If no dataId is passed to identify the channel, an empty array is returned\r\n * Heartbeats are distinguished by participantId\r\n *\r\n * @param payload\r\n */\r\nexport function getDistinctHeartbeatsForChannel(\r\n    payload: GetDistinctHeartbeatsForChannelPayload\r\n): BroadcastHeartbeat[] {\r\n\r\n    if (isNullOrUndefined(payload.channelDataId)) { return []; }\r\n\r\n    const distinctHearbeats = _.uniqBy(payload.heartbeats, (x) => x.participantId);\r\n\r\n    return distinctHearbeats.filter(x => {\r\n        if (isNullOrUndefined(x.dataId)) { return false; }\r\n\r\n        return _.isEqual(x.dataId, payload.channelDataId);\r\n    });\r\n\r\n}\r\n","import * as _ from \"lodash\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\n\r\nexport function getHeartbeatFromOldestParticipant(\r\n    payload: ReadonlyArray<BroadcastHeartbeat>\r\n): BroadcastHeartbeat {\r\n    return _.minBy(\r\n        payload, (x: BroadcastHeartbeat) => x.participantCreationDate\r\n    );\r\n}\r\n","import {isNullOrUndefined} from \"util\";\r\nimport {getDistinctHeartbeatsForChannel} from \"./get-distinct-heartbeats-for-channel.function\";\r\nimport {getHeartbeatFromOldestParticipant} from \"./get-heartbeat-form-oldest-participant.function\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\nimport { BroadcastParticipant } from \"../models/broadcast-participant.model\";\r\n\r\nexport interface ShouldBroadcastParticipantChangeRolePayload {\r\n    readonly heartbeats: ReadonlyArray<BroadcastHeartbeat>;\r\n    readonly participantId: string;\r\n    readonly currentBroadcastRole: BroadcastRole;\r\n}\r\n\r\nexport interface ShouldBroadcastParticipantChangeRoleResult {\r\n    readonly shouldChangeRole: boolean;\r\n    readonly newBroadcastRole?: BroadcastRole;\r\n}\r\n\r\nexport function shouldBroadcastParticipantChangeRole(\r\n    payload: ShouldBroadcastParticipantChangeRolePayload\r\n): ShouldBroadcastParticipantChangeRoleResult {\r\n\r\n    const result = {\r\n        shouldChangeRole: false,\r\n        newRole: null\r\n    };\r\n\r\n    const ownHeartbeat = payload.heartbeats.find(x => x.participantId === payload.participantId);\r\n\r\n    if (isNullOrUndefined(ownHeartbeat.dataId)) {\r\n        if (payload.currentBroadcastRole !== BroadcastRole.None) {\r\n            return {\r\n                newBroadcastRole: BroadcastRole.None,\r\n                shouldChangeRole: true\r\n            };\r\n        } else {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    const distinctHeartbeatsForOwnChannel = getDistinctHeartbeatsForChannel({\r\n        heartbeats: payload.heartbeats,\r\n        channelDataId: ownHeartbeat.dataId\r\n    });\r\n\r\n    if (distinctHeartbeatsForOwnChannel.length < 2) {\r\n        if (payload.currentBroadcastRole !== BroadcastRole.None) {\r\n            return {\r\n                newBroadcastRole: BroadcastRole.None,\r\n                shouldChangeRole: true\r\n            };\r\n        } else {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    const elderSender: BroadcastParticipant = getHeartbeatFromOldestParticipant(distinctHeartbeatsForOwnChannel);\r\n\r\n    if (elderSender.participantId === payload.participantId) {\r\n\r\n        if (payload.currentBroadcastRole !== BroadcastRole.Leader) {\r\n            return {\r\n                newBroadcastRole: BroadcastRole.Leader,\r\n                shouldChangeRole: true\r\n            };\r\n        } else {\r\n            return result;\r\n        }\r\n\r\n    } else {\r\n\r\n        if (payload.currentBroadcastRole !== BroadcastRole.Peon) {\r\n            return {\r\n                newBroadcastRole: BroadcastRole.Peon,\r\n                shouldChangeRole: true\r\n            };\r\n        } else {\r\n            return result;\r\n        }\r\n\r\n    }\r\n}\r\n","import {Action} from \"@ngrx/store\";\r\nimport { BroadcastParticipant } from \"../models/broadcast-participant.model\";\r\nimport { BroadcastAction } from \"../models/broadcast-action.model\";\r\n\r\nexport interface CreateBroadcastActionPayload {\r\n    readonly participant: Readonly<BroadcastParticipant>;\r\n    readonly dataId: any;\r\n    readonly action: Readonly<Action>;\r\n}\r\n\r\nexport function createBroadcastAction(\r\n    payload: CreateBroadcastActionPayload\r\n): BroadcastAction {\r\n\r\n    return Object.assign({}, payload.action, {\r\n        type: payload.action.type,\r\n        participantId: payload.participant.participantId,\r\n        participantCreationDate: payload.participant.participantCreationDate,\r\n        dataId: payload.dataId,\r\n    } as Partial<BroadcastAction>) as BroadcastAction;\r\n\r\n}\r\n","import { isNullOrUndefined } from \"util\";\r\nimport * as _ from \"lodash\";\r\nimport { leaderActionTypePrefix, peonActionTypePrefix } from \"../actions/broadcast-channel.actions\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\nimport { BroadcastAction } from \"../models/broadcast-action.model\";\r\n\r\nexport interface FilterIncomingBroadcastActionPayload {\r\n    readonly action: BroadcastAction;\r\n    readonly dataId?: any;\r\n    readonly ownBroadcastRole: BroadcastRole;\r\n}\r\n\r\nexport function filterIncomingBroadcastAction(\r\n    payload: FilterIncomingBroadcastActionPayload): boolean {\r\n\r\n    const doDataIdsExist = !isNullOrUndefined(payload.action.dataId)\r\n        && !isNullOrUndefined(payload.dataId);\r\n\r\n    if (!doDataIdsExist) {\r\n        return false;\r\n    }\r\n\r\n    const areDataIdsEqual = _.isEqual(payload.action.dataId, payload.dataId);\r\n\r\n    if (!areDataIdsEqual) {\r\n        return false;\r\n    }\r\n\r\n    const peonActionArrivesAtLeader = payload.action.type.startsWith(peonActionTypePrefix)\r\n        && payload.ownBroadcastRole === BroadcastRole.Leader;\r\n\r\n    if (peonActionArrivesAtLeader) {\r\n        return true;\r\n    }\r\n\r\n    const leaderActionArrivesAtPeon = payload.action.type.startsWith(leaderActionTypePrefix)\r\n        && payload.ownBroadcastRole === BroadcastRole.Peon;\r\n\r\n    return leaderActionArrivesAtPeon;\r\n\r\n}\r\n","import { isNullOrUndefined } from \"util\";\r\nimport {\r\n    BroadcastRoleDisplayConfig,\r\n    defaultBroadcastRoleDisplayConfig\r\n} from \"../models/broadcast-role-display-config.model\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\n\r\nexport interface ShouldUpdateBrowserTabBroadcastRoleDisplayPayload {\r\n    readonly currentBrowserTabTitle: Readonly<string>;\r\n    readonly currentBroadcastRole: BroadcastRole;\r\n}\r\n\r\nexport interface ShouldUpdateBrowserTabBroadcastRoleDisplayResult {\r\n    shouldUpdateRoleDisplay: boolean;\r\n    updatedBrowserTabTitle?: Readonly<string>;\r\n}\r\n\r\nexport interface ShouldUpdateBrowserTabBroadcastRoleDisplayConfig extends BroadcastRoleDisplayConfig {\r\n}\r\n\r\nexport const defaultShouldUpdateBrowserTabBroadcastRoleDisplayConfig: ShouldUpdateBrowserTabBroadcastRoleDisplayConfig\r\n    = defaultBroadcastRoleDisplayConfig;\r\n\r\nexport function shouldUpdateBrowserTabBroadcastRoleDisplay(\r\n    payload: ShouldUpdateBrowserTabBroadcastRoleDisplayPayload,\r\n    config = defaultShouldUpdateBrowserTabBroadcastRoleDisplayConfig\r\n): ShouldUpdateBrowserTabBroadcastRoleDisplayResult {\r\n\r\n    let updatedTabTitle: string;\r\n    let broadcastRoleLabel: string;\r\n\r\n    const result: ShouldUpdateBrowserTabBroadcastRoleDisplayResult = {\r\n        shouldUpdateRoleDisplay: null,\r\n        updatedBrowserTabTitle: null\r\n    };\r\n\r\n    switch (payload.currentBroadcastRole) {\r\n        case BroadcastRole.None:\r\n            break;\r\n        case BroadcastRole.Leader:\r\n            broadcastRoleLabel = config.leaderBrowserTabTitleSuffix;\r\n            break;\r\n        case BroadcastRole.Peon:\r\n            broadcastRoleLabel = config.peonBrowserTabTitleSuffix;\r\n            break;\r\n    }\r\n\r\n    if (!isNullOrUndefined(broadcastRoleLabel)) {\r\n        updatedTabTitle = payload.currentBrowserTabTitle;\r\n\r\n        if (updatedTabTitle.endsWith(config.leaderBrowserTabTitleSuffix)) {\r\n            updatedTabTitle = updatedTabTitle.replace(config.leaderBrowserTabTitleSuffix, \"\");\r\n        } else if (updatedTabTitle.endsWith(config.peonBrowserTabTitleSuffix)) {\r\n            updatedTabTitle = updatedTabTitle.replace(config.peonBrowserTabTitleSuffix, \"\");\r\n        }\r\n\r\n        updatedTabTitle += broadcastRoleLabel;\r\n\r\n    } else {\r\n        updatedTabTitle = payload.currentBrowserTabTitle;\r\n\r\n        if (updatedTabTitle.endsWith(config.leaderBrowserTabTitleSuffix)) {\r\n            updatedTabTitle = updatedTabTitle.replace(config.leaderBrowserTabTitleSuffix, \"\");\r\n        } else if (updatedTabTitle.endsWith(config.peonBrowserTabTitleSuffix)) {\r\n            updatedTabTitle = updatedTabTitle.replace(config.peonBrowserTabTitleSuffix, \"\");\r\n        }\r\n\r\n    }\r\n\r\n    if (updatedTabTitle !== payload.currentBrowserTabTitle) {\r\n        result.updatedBrowserTabTitle = updatedTabTitle;\r\n    }\r\n    result.shouldUpdateRoleDisplay = !isNullOrUndefined(result.updatedBrowserTabTitle);\r\n\r\n    return result;\r\n\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\nimport { compositeActionTypePrefix, trackRequestActionTypePrefix } from \"../actions/broadcast-channel.actions\";\r\n\r\nexport function filterActionToPrefixWithLeaderPredicate(action: Action): boolean {\r\n    return action.type.startsWith(compositeActionTypePrefix)\r\n        || action.type.startsWith(trackRequestActionTypePrefix);\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Action, select, Store } from \"@ngrx/store\";\r\nimport { bufferTime, distinctUntilChanged, distinctUntilKeyChanged, filter, first, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { BroadcastState, getOwnBroadcastRoleSelector } from \"../broadcast-store\";\r\nimport { interval, of } from \"rxjs\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { BroadcastHeartbeat } from \"../models/broadcast-heartbeat.model\";\r\nimport { BroadcastParticipant } from \"../models/broadcast-participant.model\";\r\nimport { createBroadcastHeartbeat } from \"../functions/create-broadcast-heartbeat.function\";\r\nimport { createBroadcastParticipant } from \"../functions/create-broadcast-participant.function\";\r\nimport { BroadcastRole } from \"../models/broadcast-role.model\";\r\nimport {\r\n    leaderActionTypePrefix, peonActionTypePrefix, requestInitialData, setBroadcastChannelDataId, setOwnBroadcastRole\r\n} from \"../actions/broadcast-channel.actions\";\r\nimport { trimIncomingBroadcastAction } from \"../functions/trim-incoming-broadcast-action.function\";\r\nimport { shouldBroadcastParticipantChangeRole } from \"../functions/should-broadcast-participant-change-role.function\";\r\nimport { createBroadcastAction } from \"../functions/create-broadcast-action.function\";\r\nimport { filterIncomingBroadcastAction } from \"../functions/filter-incoming-broadcast-action.function\";\r\nimport { BroadcastAction } from \"../models/broadcast-action.model\";\r\nimport { shouldUpdateBrowserTabBroadcastRoleDisplay } from \"../functions/should-update-browser-tab-broadcast-role-display.function\";\r\nimport { BroadcastChannelService } from \"../services/broadcast-channel.service\";\r\nimport { filterActionToPrefixWithLeaderPredicate } from \"../functions/filter-action-to-prefix-with-leader.predicate\";\r\nimport { BROADCAST_CONFIG, BroadcastConfig } from \"../models/broadcast-config.model\";\r\nimport { prefixAction } from \"../functions/prefix-action.function\";\r\n\r\nexport function getBroadcastHeartbeatsForInterval(payload: {\r\n    heartbeatsFromOtherParticipants: ReadonlyArray<BroadcastHeartbeat>;\r\n    participant: BroadcastParticipant;\r\n    dataId: any;\r\n}): BroadcastHeartbeat[] {\r\n\r\n    return payload.heartbeatsFromOtherParticipants.concat([\r\n        createBroadcastHeartbeat({\r\n            participant: payload.participant,\r\n            dataId: payload.dataId\r\n        })]);\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class BroadcastEffects {\r\n\r\n    participant: BroadcastParticipant = createBroadcastParticipant();\r\n\r\n    selectedDataId: any;\r\n    ownBroadcastRole: BroadcastRole;\r\n\r\n    heartbeat$ = interval(this.config.heartbeartBroadcastInterval);\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    cacheDataId$ = this.actions$.pipe(\r\n        ofType(setBroadcastChannelDataId),\r\n        tap(action => {\r\n            this.selectedDataId = action.payload;\r\n        })\r\n    );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    cacheOwnBroadcastRole$ = this.store.pipe(\r\n        select(getOwnBroadcastRoleSelector)\r\n    )\r\n        .pipe(\r\n            tap((ownBroadcastRole: BroadcastRole) => {\r\n                this.ownBroadcastRole = ownBroadcastRole;\r\n            })\r\n        );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    broadcastHeartbeat$ = this.heartbeat$.pipe(\r\n        tap(() => {\r\n\r\n            const heartbeat: BroadcastHeartbeat = createBroadcastHeartbeat({\r\n                participant: this.participant,\r\n                dataId: this.selectedDataId\r\n            });\r\n\r\n            this.channelService.postHeartbeat(heartbeat);\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    observeBroadcastedHeartbeats$ = this.channelService\r\n        .getHeartbeat$()\r\n        .pipe(\r\n            bufferTime(this.config.incomingHeartbeatBufferInterval),\r\n            map((heartbeartsFromOtherParticipants: BroadcastHeartbeat[]) => {\r\n\r\n                return getBroadcastHeartbeatsForInterval({\r\n                    heartbeatsFromOtherParticipants: heartbeartsFromOtherParticipants,\r\n                    participant: this.participant,\r\n                    dataId: this.selectedDataId\r\n                });\r\n\r\n            }),\r\n            map((heartbeats: BroadcastHeartbeat[]) => {\r\n\r\n                const shouldChangeRoleResult = shouldBroadcastParticipantChangeRole({\r\n                    currentBroadcastRole: this.ownBroadcastRole,\r\n                    heartbeats,\r\n                    participantId: this.participant.participantId\r\n                });\r\n\r\n                if (shouldChangeRoleResult.shouldChangeRole) {\r\n                    return setOwnBroadcastRole({broadcastRole: shouldChangeRoleResult.newBroadcastRole});\r\n                } else {\r\n                    return null;\r\n                }\r\n\r\n            }),\r\n            filter(x => !isNullOrUndefined(x))\r\n        );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    displayBroadcastRoleInBrowserTabTitle$ = this.actions$.pipe(\r\n        ofType(setOwnBroadcastRole),\r\n        filter(() => !isNullOrUndefined(this.config.updateBrowserTabTitleConfig)),\r\n        tap(action => {\r\n\r\n            const result = shouldUpdateBrowserTabBroadcastRoleDisplay({\r\n                currentBroadcastRole: action.broadcastRole,\r\n                currentBrowserTabTitle: window.document.title\r\n            }, this.config.updateBrowserTabTitleConfig);\r\n\r\n            if (result.shouldUpdateRoleDisplay) {\r\n                window.document.title = result.updatedBrowserTabTitle;\r\n            }\r\n\r\n        })\r\n    );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    broadcastPeonAction$ = this.actions$.pipe(\r\n        filter((action: Action) => action.type.startsWith(peonActionTypePrefix)),\r\n        tap((action: Action) => {\r\n\r\n            const actionMessage = createBroadcastAction({\r\n                participant: this.participant,\r\n                dataId: this.selectedDataId,\r\n                action\r\n            });\r\n            this.channelService.postAction(actionMessage);\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    createLeaderAction$ = this.store.pipe(\r\n        select(getOwnBroadcastRoleSelector),\r\n        switchMap((broadcastRole: BroadcastRole) => {\r\n\r\n            if (broadcastRole === BroadcastRole.Leader) {\r\n                return this.actions$.pipe(\r\n                    filter(filterActionToPrefixWithLeaderPredicate)\r\n                );\r\n            } else {\r\n                return of(null);\r\n            }\r\n\r\n        }),\r\n        filter(x => !isNullOrUndefined(x)),\r\n        map((action: Action) => {\r\n            return Object.assign({}, action, {\r\n                type: leaderActionTypePrefix + action.type\r\n            });\r\n        })\r\n    );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    broadcastLeaderAction$ = this.actions$.pipe(\r\n        filter((action: Action) => action.type.startsWith(leaderActionTypePrefix)),\r\n        tap((action: Action) => {\r\n\r\n            const actionMessage = createBroadcastAction({\r\n                participant: this.participant,\r\n                dataId: this.selectedDataId,\r\n                action\r\n            });\r\n\r\n            this.channelService.postAction(actionMessage);\r\n\r\n        })\r\n    );\r\n\r\n\r\n    @Effect()\r\n    observeBroadcastedActions$ = this.channelService\r\n        .getAction$()\r\n        .pipe(\r\n            filter((action: BroadcastAction) => {\r\n\r\n                return filterIncomingBroadcastAction({\r\n                    action,\r\n                    dataId: this.selectedDataId,\r\n                    ownBroadcastRole: this.ownBroadcastRole\r\n                });\r\n\r\n            }),\r\n            map(x => trimIncomingBroadcastAction(x))\r\n        );\r\n\r\n    @Effect()\r\n    readonly sendInitialData$ = this.actions$.pipe(\r\n        ofType(requestInitialData),\r\n        switchMap(() => this.store.select(getOwnBroadcastRoleSelector)\r\n            .pipe(first())),\r\n        filter(role => role === BroadcastRole.Leader\r\n            && this.config.sendInitialState !== null\r\n            && this.config.sendInitialState !== undefined),\r\n        switchMap(() => this.store.pipe(first())),\r\n        map(state => prefixAction({\r\n            action: this.config.sendInitialState(state as any),\r\n            prefix: leaderActionTypePrefix\r\n        }))\r\n    );\r\n\r\n    @Effect()\r\n    readonly requestInitialData$ = this.store.select(getOwnBroadcastRoleSelector)\r\n        .pipe(\r\n            distinctUntilChanged(),\r\n            filter(role => role === BroadcastRole.Peon\r\n                && this.config.sendInitialState !== null\r\n                && this.config.sendInitialState !== undefined),\r\n            map(() => prefixAction({\r\n                action: requestInitialData,\r\n                prefix: peonActionTypePrefix\r\n            }))\r\n        );\r\n\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly store: Store<BroadcastState>,\r\n        private readonly channelService: BroadcastChannelService,\r\n        @Inject(BROADCAST_CONFIG)\r\n        private readonly config: BroadcastConfig\r\n    ) {\r\n    }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { broadcastReducer, broadcastReducerProvider, broadcastStoreFeature } from \"./broadcast-store\";\r\nimport { broadcastStoreProvider } from \"./broadcast-store.decorator\";\r\nimport { broadcastChannelServiceProvider } from \"./services/broadcast-channel.service\";\r\nimport { BroadcastEffects } from \"./effects/broadcast.effects\";\r\nimport { BROADCAST_CONFIG, BroadcastConfig, defaultBroadcastConfig } from \"./models/broadcast-config.model\";\r\nimport { NoPeonGuard } from \"./guards/no-peon.guard\";\r\nimport { EntityTypeMap } from \"entity-store\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        StoreModule.forFeature(broadcastStoreFeature, broadcastReducer),\r\n        EffectsModule.forFeature([\r\n            BroadcastEffects\r\n        ]),\r\n        MatSnackBarModule\r\n    ],\r\n    providers: [\r\n        broadcastChannelServiceProvider,\r\n        {\r\n            provide: BROADCAST_CONFIG,\r\n            useValue: defaultBroadcastConfig\r\n        },\r\n        NoPeonGuard,\r\n        broadcastReducerProvider\r\n    ]\r\n})\r\nexport class DgpBroadcastStoreModule {\r\n\r\n    static forRoot<TEntityTypeMap extends EntityTypeMap = { [key: string]: any; }, TStoreFeature = string>(\r\n        config: BroadcastConfig<TEntityTypeMap, TStoreFeature> = defaultBroadcastConfig as any\r\n    ): ModuleWithProviders<DgpBroadcastStoreModule> {\r\n        return {\r\n            ngModule: DgpBroadcastStoreModule,\r\n            providers: [{\r\n                provide: BROADCAST_CONFIG,\r\n                useValue: config\r\n            }, broadcastStoreProvider]\r\n        };\r\n    }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-empty-state\",\r\n    template: `\r\n        <dgp-empty-state-icon *ngIf=\"matIconName\">\r\n            {{ matIconName }}\r\n        </dgp-empty-state-icon>\r\n        <dgp-empty-state-title>\r\n            {{ title }}\r\n        </dgp-empty-state-title>\r\n\r\n        <dgp-empty-state-content>\r\n            <ng-content></ng-content>\r\n        </dgp-empty-state-content>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            max-height: 640px;\r\n            height: 100%;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class EmptyStateComponent {\r\n\r\n    @Input()\r\n    matIconName: string;\r\n\r\n    @Input()\r\n    title: string;\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-empty-state-content\",\r\n    template: `<ng-content></ng-content>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EmptyStateContentComponent {\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-empty-state-icon\",\r\n    template: `\r\n        <mat-icon class=\"icon\">\r\n            <ng-content></ng-content>\r\n        </mat-icon>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            margin-left: 16px;\r\n            margin-right: 16px;\r\n            display: inline-flex;\r\n        }\r\n\r\n        .icon {\r\n            color: gray;\r\n            font-size: 64px;\r\n            width: 64px;\r\n            height: 64px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EmptyStateIconComponent {\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-empty-state-title\",\r\n    template: `\r\n        <h1 class=\"mat-h1\">\r\n            <ng-content></ng-content>\r\n        </h1>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: inline-flex;\r\n            color: gray;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class EmptyStateTitleComponent {\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { EmptyStateComponent } from \"./components/empty-state.component\";\r\nimport { EmptyStateContentComponent } from \"./components/empty-state-content.component\";\r\nimport { EmptyStateIconComponent } from \"./components/empty-state-icon.component\";\r\nimport { EmptyStateTitleComponent } from \"./components/empty-state-title.component\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatIconModule\r\n    ],\r\n    declarations: [\r\n        EmptyStateComponent,\r\n        EmptyStateContentComponent,\r\n        EmptyStateIconComponent,\r\n        EmptyStateTitleComponent\r\n    ],\r\n    exports: [\r\n        EmptyStateComponent\r\n    ]\r\n})\r\nexport class DgpEmptyStateModule {\r\n}\r\n","import { InjectionToken, Type } from \"@angular/core\";\r\n\r\nexport interface FileItem {\r\n    readonly fileItemId: string;\r\n    readonly fileName: string;\r\n    readonly extension: string;\r\n    /**\r\n     * File size in bytes\r\n     */\r\n    readonly size: number;\r\n    readonly url: string;\r\n    readonly creationDate: Date;\r\n    /**\r\n     * Indicates whether this item has\r\n     * already been saved.\r\n     *\r\n     * When a new item is uploaded, this\r\n     * flag is true, so the developer\r\n     * has a means of knowing which items to\r\n     * persist.\r\n     */\r\n    readonly isSaved?: boolean;\r\n}\r\n\r\nexport interface Directory {\r\n    readonly directoryId: string;\r\n    readonly label: string;\r\n    readonly fileItemIds: ReadonlyArray<string>;\r\n}\r\n\r\nexport interface FileTypeViewerMap {\r\n    [key: string]: Type<any>;\r\n}\r\n\r\nexport const FILE_VIEWER_CONFIG = new InjectionToken<FileViewerConfig>(\"DgpFileViewerConfig\");\r\n\r\nexport interface FileViewerConfig {\r\n    readonly fileTypeViewerMap: FileTypeViewerMap;\r\n}\r\n","export function getFileItemSizeLabel(size: number): string {\r\n\r\n    if (size < 1000) {\r\n        return (size / (1000)).toFixed(2) + \" Kb\";\r\n    } else {\r\n        return (size / (1000 * 1000)).toFixed(2) + \" Mb\";\r\n    }\r\n\r\n}\r\n","import { FileItem } from \"../file-viewer/models\";\r\nimport { createGuid } from \"../broadcast/functions/create-guid.function\";\r\n\r\nexport function parseFileNameWithExtension(fileNameWithExtension: string): {\r\n    readonly extension: string;\r\n    readonly fileName: string;\r\n} {\r\n\r\n    const lastPeriodIndex = fileNameWithExtension.indexOf(\".\");\r\n    const extension = fileNameWithExtension.substring(lastPeriodIndex + 1, fileNameWithExtension.length);\r\n    const fileName = fileNameWithExtension.substring(0, lastPeriodIndex);\r\n\r\n    return {\r\n        extension, fileName\r\n    };\r\n}\r\n\r\nexport function getMimeTypeFromExtension(extension: string): string {\r\n    switch (extension) {\r\n        case \"pdf\":\r\n            return \"application/pdf\";\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function getFileItemsFromFileList(fileList: FileList): ReadonlyArray<FileItem> {\r\n\r\n    const result = new Array<FileItem>();\r\n\r\n    for (let i = 0; i < fileList.length; i++) {\r\n        const file = fileList.item(i);\r\n\r\n        const objectUrl = URL.createObjectURL(file);\r\n\r\n        const fileItem: FileItem = {\r\n            fileItemId: createGuid(),\r\n            size: file.size,\r\n            url: objectUrl,\r\n            creationDate: new Date(file.lastModified),\r\n            isSaved: false,\r\n            ...parseFileNameWithExtension(file.name)\r\n        };\r\n\r\n        result.push(fileItem);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n}\r\n\r\nexport function getFileFromFileItem$(fileItem: FileItem): Promise<File> {\r\n\r\n    return new Promise<File>(resolve => {\r\n\r\n        return fetch(fileItem.url, {\r\n            credentials: \"include\"\r\n        }).then(x => x.blob()).then(x => {\r\n            const file = new Blob([x], {\r\n                type: getMimeTypeFromExtension(fileItem.extension)\r\n            });\r\n\r\n            (file as any).name = fileItem.fileName + \".\" + fileItem.extension;\r\n\r\n            resolve(file as File);\r\n        }).catch(reason => {\r\n            console.error(reason);\r\n        });\r\n\r\n    });\r\n\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from \"@angular/core\";\r\nimport { FileItem } from \"../models\";\r\nimport { getFileFromFileItem$ } from \"../../file-upload/functions\";\r\nimport { Platform } from \"@angular/cdk/platform\";\r\n\r\n@Component({\r\n    selector: \"dgp-fallback-file-viewer\",\r\n    template: `\r\n        <dgp-empty-state title=\"No preview available\"\r\n                         matIconName=\"get_app\">\r\n\r\n            <a *ngIf=\"!isTridentOrEdge; else ieFallback\"\r\n               class=\"download-link\"\r\n               [href]=\"fileItem.url | safe:'url'\"\r\n               target=\"_blank\">\r\n                Download it here\r\n            </a>\r\n\r\n            <ng-template #ieFallback>\r\n                <a class=\"download-link\"\r\n                   href=\"javascript:;\"\r\n                   (click)=\"downloadFileInTridentOrEdge()\">\r\n                    Download it here\r\n                </a>\r\n            </ng-template>\r\n\r\n        </dgp-empty-state>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .download-link {\r\n            color: inherit;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FallbackFileViewerComponent implements AfterViewInit {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n\r\n    isTridentOrEdge: boolean;\r\n\r\n    constructor(\r\n        private readonly platform: Platform\r\n    ) {\r\n        this.isTridentOrEdge = this.platform.TRIDENT || this.platform.EDGE;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.isTridentOrEdge = this.platform.TRIDENT || this.platform.EDGE;\r\n    }\r\n\r\n    async downloadFileInTridentOrEdge() {\r\n        const file = await getFileFromFileItem$(this.fileItem);\r\n        window.navigator.msSaveOrOpenBlob(file, file.name);\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Directory, FileItem } from \"../models\";\r\nimport { getFileItemSizeLabel } from \"../functions\";\r\nimport { KVS } from \"entity-store\";\r\n\r\nexport interface FileItemListModel {\r\n    readonly fileItemKVS: KVS<FileItem>;\r\n    readonly directories: ReadonlyArray<Directory>;\r\n}\r\n\r\n@Component({\r\n    selector: \"dgp-file-item-list\",\r\n    template: `\r\n        <mat-nav-list style=\"overflow: auto;\">\r\n            <ng-container *ngFor=\"let directory of model.directories\">\r\n                <h3 mat-subheader>{{ directory.label }}</h3>\r\n\r\n                <a *ngFor=\"let fileItemId of directory.fileItemIds\"\r\n                   mat-list-item\r\n                   [routerLink]=\"[]\"\r\n                   routerLinkActive=\"dgp-list-item --selected\"\r\n                   [queryParams]=\"{ fileItemId: model.fileItemKVS[fileItemId].fileItemId }\"\r\n                   [matTooltip]=\"model.fileItemKVS[fileItemId].fileName\"\r\n                   matTooltipShowDelay=\"500\"\r\n                   (keydown.delete)=\"removeFileItem(model.fileItemKVS[fileItemId])\">\r\n                    <mat-icon matListIcon>\r\n                        insert_drive_file\r\n                    </mat-icon>\r\n                    <div matLine\r\n                         style=\"display: flex; align-items: center;\">\r\n\r\n                        <div style=\"flex-grow: 1; display: flex; flex-direction: column; overflow: hidden;\">\r\n\r\n                            <div style=\"flex-grow: 1; display: flex;\">\r\n                                {{ model.fileItemKVS[fileItemId].fileName }}\r\n                                <dgp-spacer></dgp-spacer>\r\n                                <small>{{ model.fileItemKVS[fileItemId].extension }}</small>\r\n                            </div>\r\n\r\n                            <div style=\"display: flex;\">\r\n                                <small>{{ model.fileItemKVS[fileItemId].creationDate | date:'hh:mm, dd MMMM yyyy' }}</small>\r\n                                <dgp-spacer></dgp-spacer>\r\n                                <small>{{ getFileItemSize(model.fileItemKVS[fileItemId]) }}</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button mat-icon-button\r\n                                style=\"margin-left: 16px;\"\r\n                                [matMenuTriggerFor]=\"overflowMenu\"\r\n                                [disabled]=\"disabled\">\r\n\r\n                            <mat-icon>\r\n                                more_vert\r\n                            </mat-icon>\r\n\r\n                        </button>\r\n\r\n                        <mat-menu #overflowMenu=\"matMenu\">\r\n                            <button mat-menu-item\r\n                                    (click)=\"removeFileItem(model.fileItemKVS[fileItemId])\"\r\n                                    [disabled]=\"disabled\">Remove\r\n                            </button>\r\n                        </mat-menu>\r\n\r\n                    </div>\r\n                </a>\r\n\r\n            </ng-container>\r\n        </mat-nav-list>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            overflow: auto;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FileItemListComponent {\r\n\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    @Output()\r\n    readonly fileItemRemoved = new EventEmitter<FileItem>();\r\n\r\n    @Input()\r\n    model: FileItemListModel;\r\n\r\n    getFileItemSize(fileItem: FileItem) {\r\n        return getFileItemSizeLabel(fileItem.size);\r\n    }\r\n\r\n    removeFileItem(fileItem: FileItem) {\r\n        if (this.disabled) return;\r\n\r\n        this.fileItemRemoved.emit(fileItem);\r\n    }\r\n\r\n}\r\n","import { Input, Directive } from \"@angular/core\";\r\nimport { FileItem } from \"../models\";\r\n\r\n@Directive()\r\nexport class ViewerComponentBase {\r\n    @Input()\r\n    fileItem: FileItem;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { FILE_VIEWER_CONFIG, FileItem, FileViewerConfig } from \"../models\";\r\n\r\n@Component({\r\n    selector: \"dgp-file-viewer\",\r\n    template: `\r\n\r\n        <ng-container *ngIf=\"isKnownFileType; else dynamicViewer\">\r\n            <ng-container [ngSwitch]=\"fileItem.extension\">\r\n                <dgp-jpg-viewer *ngSwitchCase=\"'jpg'\"\r\n                                [fileItem]=\"fileItem\"></dgp-jpg-viewer>\r\n                <dgp-pdf-viewer *ngSwitchCase=\"'pdf'\"\r\n                                [fileItem]=\"fileItem\"></dgp-pdf-viewer>\r\n                <dgp-png-viewer *ngSwitchCase=\"'png'\"\r\n                                [fileItem]=\"fileItem\"></dgp-png-viewer>\r\n                <dgp-svg-viewer *ngSwitchCase=\"'svg'\"\r\n                                [fileItem]=\"fileItem\"></dgp-svg-viewer>\r\n                <dgp-fallback-file-viewer *ngSwitchDefault\r\n                                          [fileItem]=\"fileItem\"></dgp-fallback-file-viewer>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-template #dynamicViewer>\r\n            <dgp-dynamic-file-viewer [fileItem]=\"fileItem\"></dgp-dynamic-file-viewer>\r\n        </ng-template>\r\n\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-grow: 1;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FileViewerComponent implements OnChanges {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n\r\n    isKnownFileType: boolean;\r\n\r\n    constructor(\r\n        @Inject(FILE_VIEWER_CONFIG)\r\n        private readonly config: FileViewerConfig\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes && changes.fileItem) {\r\n            if (this.fileItem) {\r\n                this.isKnownFileType = this.config.fileTypeViewerMap[this.fileItem.extension] === null\r\n                    || this.config.fileTypeViewerMap[this.fileItem.extension] === undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    Inject,\r\n    Input,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { FILE_VIEWER_CONFIG, FileItem, FileViewerConfig } from \"../models\";\r\nimport { ViewerComponentBase } from \"./file-viewer.component-base\";\r\n\r\n@Component({\r\n    selector: \"dgp-dynamic-file-viewer\",\r\n    template: ``,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DynamicFileViewerComponent implements OnChanges {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n\r\n    constructor(\r\n        private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n        private readonly viewContainerRef: ViewContainerRef,\r\n        @Inject(FILE_VIEWER_CONFIG)\r\n        private readonly config: FileViewerConfig\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes && changes.fileItem) {\r\n            if (this.fileItem) {\r\n                this.loadComponent(this.fileItem);\r\n            } else {\r\n                this.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadComponent(fileItem: FileItem) {\r\n        const fileType = fileItem.extension;\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n            this.config.fileTypeViewerMap[fileType.toLowerCase()] ? this.config.fileTypeViewerMap[fileType.toLowerCase()] : this.config.fileTypeViewerMap.default\r\n        );\r\n        this.viewContainerRef.clear();\r\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\r\n        const viewerComponent = componentRef.instance as ViewerComponentBase;\r\n        viewerComponent.fileItem = this.fileItem;\r\n    }\r\n\r\n    private clear() {\r\n        this.viewContainerRef.clear();\r\n    }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\r\nimport { FileItem } from \"../models\";\r\n\r\n@Component({\r\n    selector: \"dgp-jpg-viewer\",\r\n    template: `\r\n        <img [src]=\"fileItem.url | safe:'url'\"\r\n             class=\"image\"\r\n             alt=\"{{ fileItem.fileName }}\">\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        \r\n        .image {\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n            object-fit: contain;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class JpgViewerComponent {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { FileItem } from \"../models\";\r\nimport { Platform } from \"@angular/cdk/platform\";\r\n\r\n@Component({\r\n    selector: \"dgp-pdf-viewer\",\r\n    template: `\r\n\r\n        <ng-container *ngIf=\"platform.FIREFOX || platform.BLINK || platform.EDGE; else fallback\">\r\n\r\n            <ng-container *ngIf=\"platform.FIREFOX || platform.BLINK\">\r\n                <object [attr.data]=\"fileItem.url | safe:'resourceUrl'\"\r\n                        type=\"application/pdf\"\r\n                        width=\"100%\"\r\n                        height=\"100%\">\r\n                    <dgp-fallback-file-viewer [fileItem]=\"fileItem\"></dgp-fallback-file-viewer>\r\n                </object>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"platform.EDGE\">\r\n                <div [innerHTML]=\"edgeHTML | safe:'html'\"\r\n                     class=\"edge-helper\"></div>\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n        <ng-template #fallback>\r\n            <dgp-fallback-file-viewer [fileItem]=\"fileItem\"></dgp-fallback-file-viewer>\r\n        </ng-template>\r\n\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .edge-helper {\r\n            flex-grow: 1;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PdfViewerComponent implements OnChanges {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n    edgeHTML: any;\r\n\r\n    constructor(\r\n        public readonly platform: Platform,\r\n        private readonly cd: ChangeDetectorRef\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.fileItem && this.platform.EDGE) {\r\n            this.edgeHTML = `\r\n                <embed src=\"${this.fileItem.url}\"\r\n                       type=\"application/pdf\"\r\n                       width=\"100%\"\r\n                       height=\"100%\">\r\n            `;\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\r\nimport { FileItem } from \"../models\";\r\n\r\n@Component({\r\n    selector: \"dgp-png-viewer\",\r\n    template: `\r\n        <img [src]=\"fileItem.url | safe:'url'\"\r\n             class=\"image\"\r\n             alt=\"{{ fileItem.fileName }}\">\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .image {\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n            object-fit: contain;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PngViewerComponent {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\r\nimport { FileItem } from \"../models\";\r\n\r\n@Component({\r\n    selector: \"dgp-svg-viewer\",\r\n    template: `\r\n        <img [src]=\"fileItem.url | safe:'url'\"\r\n             class=\"image\"\r\n             alt=\"{{ fileItem.fileName }}\">\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .image {\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n            object-fit: contain;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SvgViewerComponent {\r\n\r\n    @Input()\r\n    fileItem: FileItem;\r\n\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from \"@angular/platform-browser\";\r\n\r\n@Pipe({\r\n    name: \"safe\"\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n    constructor(protected sanitizer: DomSanitizer) {\r\n    }\r\n\r\n    public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n        switch (type) {\r\n            case \"html\":\r\n                return this.sanitizer.bypassSecurityTrustHtml(value);\r\n            case \"style\":\r\n                return this.sanitizer.bypassSecurityTrustStyle(value);\r\n            case \"script\":\r\n                return this.sanitizer.bypassSecurityTrustScript(value);\r\n            case \"url\":\r\n                return this.sanitizer.bypassSecurityTrustUrl(value);\r\n            case \"resourceUrl\":\r\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n            default:\r\n                throw new Error(`Invalid safe type specified: ${type}`);\r\n        }\r\n    }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-spacer\",\r\n    template: ``,\r\n    styles: [`\r\n        :host {\r\n            flex-grow: 1;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SpacerComponent {\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { SpacerComponent } from \"./components/spacer.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SpacerComponent\r\n    ],\r\n    exports: [\r\n        SpacerComponent\r\n    ]\r\n})\r\nexport class DgpSpacerModule {\r\n}\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { PdfViewerComponent } from \"./components/pdf-viewer.component\";\r\nimport { PngViewerComponent } from \"./components/png-viewer.component\";\r\nimport { FileViewerComponent } from \"./components/file-viewer.component\";\r\nimport { FallbackFileViewerComponent } from \"./components/fallback-file-viewer.component\";\r\nimport { FileItemListComponent } from \"./components/file-item-list.component\";\r\nimport { JpgViewerComponent } from \"./components/jpg-viewer.component\";\r\nimport { SvgViewerComponent } from \"./components/svg-viewer.component\";\r\nimport { SafePipe } from \"./safe.pipe\";\r\nimport { PlatformModule } from \"@angular/cdk/platform\";\r\nimport { DgpEmptyStateModule } from \"../empty-state/empty-state.module\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { DgpSpacerModule } from \"../spacer/spacer.module\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { FILE_VIEWER_CONFIG, FileTypeViewerMap, FileViewerConfig } from \"./models\";\r\nimport { DynamicFileViewerComponent } from \"./components/dynamic-file-viewer.component\";\r\n\r\n// TODO: Add bmp\r\n\r\nexport const defaultFileTypeViewerMap: FileTypeViewerMap = {};\r\n\r\nexport const defaultFileViewerConfig: FileViewerConfig = {\r\n    fileTypeViewerMap: defaultFileTypeViewerMap\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        PlatformModule,\r\n        DgpEmptyStateModule,\r\n        MatListModule,\r\n        RouterModule,\r\n        CommonModule,\r\n        MatTooltipModule,\r\n        MatIconModule,\r\n        DgpSpacerModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n    ],\r\n    declarations: [\r\n        SafePipe,\r\n        PdfViewerComponent,\r\n        JpgViewerComponent,\r\n        PngViewerComponent,\r\n        SvgViewerComponent,\r\n        FileViewerComponent,\r\n        FallbackFileViewerComponent,\r\n        FileItemListComponent,\r\n        DynamicFileViewerComponent\r\n    ],\r\n    exports: [\r\n        PdfViewerComponent,\r\n        JpgViewerComponent,\r\n        PngViewerComponent,\r\n        SvgViewerComponent,\r\n        FileViewerComponent,\r\n        FallbackFileViewerComponent,\r\n        FileItemListComponent,\r\n        DynamicFileViewerComponent\r\n    ],\r\n    providers: [{\r\n        provide: FILE_VIEWER_CONFIG,\r\n        useValue: defaultFileViewerConfig\r\n    }]\r\n})\r\nexport class DgpFileViewerModule {\r\n\r\n    static forRoot(config = defaultFileViewerConfig): ModuleWithProviders<DgpFileViewerModule> {\r\n        return {\r\n            ngModule: DgpFileViewerModule,\r\n            providers: [{\r\n                provide: FILE_VIEWER_CONFIG,\r\n                useValue: config\r\n            }]\r\n        };\r\n    }\r\n\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { FileUploadConfig } from \"./models\";\r\nimport { Directory, FileItem } from \"../file-viewer/models\";\r\n\r\nexport const openFileManagerOverlay = createAction(\"[FileUpload] OpenFileManagerOverlay\", props<{\r\n    readonly config?: FileUploadConfig;\r\n    readonly fileItems?: ReadonlyArray<FileItem>;\r\n    readonly directories?: ReadonlyArray<Directory>;\r\n    readonly selectedFileItemId?: string;\r\n} | null>());\r\nexport const openFileManager = openFileManagerOverlay;\r\nexport const closeFileManager = createAction(\"[FileUpload] CloseFileManager\");\r\n\r\nexport const addFilesViaDrop = createAction(\"[FileUpload] AddFiles\",\r\n    props<{ readonly fileItems: ReadonlyArray<FileItem> }>()\r\n);\r\nexport const addFiles = addFilesViaDrop;\r\n\r\nexport const removeFile = createAction(\"[FileUpload] RemoveFile\",\r\n    props<{ readonly fileItem: FileItem; }>()\r\n);\r\n\r\nexport const showDropTarget = createAction(\"[FileUpload] ShowDropTarget\");\r\nexport const hideDropTarget = createAction(\"[FileUpload] HideDropTarget\");\r\n\r\nexport const setConfig = createAction(\"[FileUpload] SetConfig\", props<{ readonly config: FileUploadConfig; }>());\r\n","import { Directive, ElementRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { openFileManager } from \"../actions\";\r\n\r\n@Directive({\r\n    selector: \"[dgpFileDragListener]\"\r\n})\r\nexport class DragFileListenerDirective {\r\n\r\n    constructor(\r\n        private readonly store: Store<any>,\r\n        private readonly elementRef: ElementRef\r\n    ) {\r\n\r\n        function dragOverHandler(e) {\r\n            e.preventDefault();\r\n            store.dispatch(openFileManager({}));\r\n        }\r\n\r\n        this.elementRef.nativeElement.addEventListener(\"dragover\", dragOverHandler);\r\n\r\n    }\r\n\r\n}\r\n","import { EntityStateMap } from \"entity-store\";\r\nimport { InjectionToken } from \"@angular/core\";\r\nimport { MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { Directory, FileItem } from \"../file-viewer/models\";\r\n\r\nexport type OpenFileManagerShortKeyFilter = (x: KeyboardEvent) => boolean;\r\n\r\nexport interface FileUploadEditingCapabilities {\r\n    readonly canAddFiles: boolean;\r\n    readonly canRemoveFiles: boolean;\r\n}\r\n\r\nexport interface FileUploadConfig {\r\n    readonly fileManagerMatDialogConfig: MatDialogConfig;\r\n    readonly maximizedClass: string;\r\n    readonly openFileManagerShortKeyFilter: OpenFileManagerShortKeyFilter;\r\n    readonly editingCapabilities: FileUploadEditingCapabilities;\r\n    readonly canOpenFileDrawer: boolean;\r\n}\r\n\r\nexport function openFileManagerShortKeyFilter(x: KeyboardEvent) {\r\n    return  x.keyCode === 70 && x.altKey;\r\n}\r\n\r\nexport const defaultFileUploadConfig: FileUploadConfig = {\r\n    fileManagerMatDialogConfig: {\r\n        height: \"80%\",\r\n        width: \"80%\",\r\n        panelClass: \"dgp-file-manager-overlay\"\r\n    },\r\n    maximizedClass: \"--maximized\",\r\n    openFileManagerShortKeyFilter,\r\n    editingCapabilities: {\r\n        canAddFiles: true,\r\n        canRemoveFiles: true\r\n    },\r\n    canOpenFileDrawer: true\r\n};\r\n\r\n\r\nexport const FILE_UPLOAD_CONFIG = new InjectionToken<FileUploadConfig>(\"FileUploadConfig\");\r\n\r\nexport interface FileUploadEntities {\r\n    readonly directory: Directory;\r\n    readonly fileItem: FileItem;\r\n}\r\n\r\nexport interface FileUploadQueryParams {\r\n    readonly fileItemId?: string;\r\n}\r\n\r\nexport interface FileUploadState extends EntityStateMap<FileUploadEntities> {\r\n    readonly isFileManagerOpen: boolean;\r\n    readonly isDropTargetVisible: boolean;\r\n    readonly initialConfig: FileUploadConfig;\r\n}\r\n\r\nexport type FileUploadStoreFeature = \"FileUpload\";\r\nexport const fileUploadStoreFeature: FileUploadStoreFeature = \"FileUpload\";\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { FileUploadState, fileUploadStoreFeature } from \"./models\";\r\nimport { getAll, getFirstSelected } from \"entity-store\";\r\nimport { FileItemListModel } from \"../file-viewer/components/file-item-list.component\";\r\n\r\nexport const fileUploadFeatureSelector = createFeatureSelector<FileUploadState>(fileUploadStoreFeature);\r\n\r\nexport const getFileItemState = createSelector(fileUploadFeatureSelector, x => x.fileItem);\r\nexport const getDirectoryState = createSelector(fileUploadFeatureSelector, x => x.directory);\r\n\r\nexport const getAllFileItems = createSelector(getFileItemState, x => getAll(x));\r\nexport const getFileItemKVS = createSelector(getFileItemState, x => x.entities);\r\nexport const getAllDirectories = createSelector(getDirectoryState, x => getAll(x));\r\n\r\nexport const getFileItemListModel = createSelector(\r\n    getAllDirectories, getFileItemKVS, (directories, fileItemKVS) => {\r\n        return {\r\n            directories, fileItemKVS\r\n        } as FileItemListModel;\r\n    });\r\n\r\nexport const getSelectedFileItem = createSelector(getFileItemState, x => getFirstSelected(x));\r\n\r\nexport const isFileManagerOpen = createSelector(fileUploadFeatureSelector, x => x.isFileManagerOpen);\r\n\r\nexport const canOpenFileDrawer = createSelector(fileUploadFeatureSelector, x => x.initialConfig.canOpenFileDrawer);\r\n\r\nexport const isAddFilesDisabled = createSelector(fileUploadFeatureSelector, x => !x.initialConfig.editingCapabilities.canAddFiles);\r\nexport const isRemoveFilesDisabled = createSelector(fileUploadFeatureSelector, x => !x.initialConfig.editingCapabilities.canRemoveFiles);\r\n\r\n\r\nexport const isDropTargetVisible = createSelector(fileUploadFeatureSelector,\r\n    x => x.initialConfig.editingCapabilities.canAddFiles && (x.isDropTargetVisible || x.fileItem.ids.length === 0)\r\n);\r\n","import { Directive, Inject, OnDestroy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { openFileManager } from \"../actions\";\r\nimport { fromEvent, Subscription } from \"rxjs\";\r\nimport { filter, first, switchMap, tap } from \"rxjs/operators\";\r\nimport { isFileManagerOpen } from \"../selectors\";\r\nimport { FILE_UPLOAD_CONFIG, FileUploadConfig } from \"../models\";\r\n\r\n@Directive({\r\n    selector: \"[dgpOpenFileManagerViaShortKey]\"\r\n})\r\nexport class OpenFileManagerViaShortKeyDirective implements OnDestroy {\r\n\r\n    private readonly keyPressSubscription: Subscription;\r\n\r\n    constructor(\r\n        private readonly store: Store<any>,\r\n        @Inject(FILE_UPLOAD_CONFIG)\r\n        private readonly moduleConfig: FileUploadConfig\r\n    ) {\r\n\r\n        this.keyPressSubscription = fromEvent(document, \"keydown\")\r\n            .pipe(\r\n                filter(this.moduleConfig.openFileManagerShortKeyFilter),\r\n                switchMap(() => this.store.select(isFileManagerOpen)\r\n                    .pipe(first())\r\n                    .toPromise()),\r\n                filter(x => !x),\r\n                tap(() => this.store.dispatch(openFileManager({})))\r\n            )\r\n            .subscribe();\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (!this.keyPressSubscription.closed) {\r\n            this.keyPressSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n}\r\n","import { FactoryProvider, InjectionToken } from \"@angular/core\";\r\nimport { defaultFileUploadConfig, FileUploadEntities, FileUploadState, FileUploadStoreFeature } from \"./models\";\r\nimport { createEntityStore } from \"entity-store\";\r\nimport { ActionReducerMap } from \"@ngrx/store\";\r\nimport { closeFileManager, hideDropTarget, openFileManagerOverlay, setConfig, showDropTarget } from \"./actions\";\r\n\r\nexport const fileUploadEntityStore = createEntityStore<FileUploadEntities, FileUploadStoreFeature>({\r\n    storeFeature: \"FileUpload\",\r\n    entityTypes: [\r\n        \"directory\",\r\n        \"fileItem\"\r\n    ]\r\n});\r\n\r\nexport const fileUploadReducer = new InjectionToken<FileUploadState>(\"hamburgerShellReducer\");\r\n\r\nexport const fileUploadReducerImpl: ActionReducerMap<FileUploadState> = {\r\n    ...fileUploadEntityStore.reducers,\r\n    isFileManagerOpen: (state = false, action) => {\r\n\r\n        switch (action.type) {\r\n            case openFileManagerOverlay.type:\r\n                return true;\r\n            case closeFileManager.type:\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n\r\n    },\r\n    isDropTargetVisible: (state = false, action) => {\r\n\r\n        switch (action.type) {\r\n            case showDropTarget.type:\r\n                return true;\r\n            case hideDropTarget.type:\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n\r\n    },\r\n    initialConfig: (state = defaultFileUploadConfig, action) => {\r\n        if (action.type === setConfig.type) {\r\n            return (action as any).config;\r\n        } else {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport function fileUploadReducerFactory() {\r\n    return fileUploadReducerImpl;\r\n}\r\n\r\nexport const fileUploadReducerProvider: FactoryProvider = {\r\n    provide: fileUploadReducer,\r\n    useFactory: fileUploadReducerFactory\r\n};\r\n\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Inject, OnDestroy, } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { addFilesViaDrop, hideDropTarget, removeFile, showDropTarget } from \"../actions\";\r\nimport { FILE_UPLOAD_CONFIG, FileUploadConfig, FileUploadState } from \"../models\";\r\nimport {\r\n    canOpenFileDrawer,\r\n    getFileItemListModel,\r\n    getSelectedFileItem,\r\n    isAddFilesDisabled,\r\n    isDropTargetVisible,\r\n    isRemoveFilesDisabled\r\n} from \"../selectors\";\r\nimport { getFileItemsFromFileList } from \"../functions\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { FileItem } from \"../../file-viewer/models\";\r\n\r\n@Component({\r\n    selector: \"dgp-file-manager\",\r\n    template: `\r\n\r\n        <ng-container *ngIf=\"(isDropTargetVisible$ | async) === false; else dropTarget\">\r\n\r\n            <h2 mat-dialog-title\r\n                style=\"display: flex; align-items: center\">\r\n                File manager\r\n                <dgp-spacer></dgp-spacer>\r\n                <button *ngIf=\"!isMaximized\"\r\n                        mat-icon-button\r\n                        (click)=\"maximize()\"\r\n                        matTooltip=\"Maximize\">\r\n                    <mat-icon>crop_din</mat-icon>\r\n                </button>\r\n                <button *ngIf=\"isMaximized\"\r\n                        mat-icon-button\r\n                        (click)=\"minimize()\"\r\n                        matTooltip=\"Minimize\">\r\n                    <mat-icon>filter_none</mat-icon>\r\n                </button>\r\n                <button mat-icon-button\r\n                        mat-dialog-close\r\n                        matTooltip=\"Close dialog\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </h2>\r\n\r\n            <dgp-list-details-page *ngIf=\"canOpenFileDrawer$ | async; else singleFileMode\">\r\n\r\n                <ng-container dgp-list-details-page-menu>\r\n                    <dgp-file-item-list [model]=\"fileItemListModel$ | async\"\r\n                                        (fileItemRemoved)=\"removeFileItem($event)\"\r\n                                        [disabled]=\"isRemoveFilesDisabled$ | async\"></dgp-file-item-list>\r\n                    <dgp-spacer></dgp-spacer>\r\n                    <mat-nav-list *ngIf=\"!(isAddFilesDisabled$ | async)\">\r\n                        <a mat-list-item\r\n                           (click)=\"filePicker.click()\">\r\n                            <mat-icon>\r\n                                open_in_new\r\n                            </mat-icon>\r\n                            <div matLine>\r\n                                Choose file via picker\r\n                            </div>\r\n                            <input hidden\r\n                                   multiple\r\n                                   (change)=\"onFileSelected($event)\"\r\n                                   type=\"file\"\r\n                                   #filePicker>\r\n                        </a>\r\n                    </mat-nav-list>\r\n                </ng-container>\r\n\r\n                <dgp-file-viewer [fileItem]=\"selectedFileItem$ | async\"></dgp-file-viewer>\r\n\r\n            </dgp-list-details-page>\r\n\r\n            <ng-template #singleFileMode>\r\n                <dgp-file-viewer [fileItem]=\"selectedFileItem$ | async\"></dgp-file-viewer>\r\n            </ng-template>\r\n        </ng-container>\r\n\r\n        <ng-template #dropTarget>\r\n\r\n            <dgp-empty-state title=\"Drop file here\"\r\n                             matIconName=\"get_app\"\r\n                             class=\"drop-target\">\r\n                Drop one or more files into this zone to upload them.\r\n                <br>\r\n                You can preview them afterward.\r\n                <br>\r\n                <button mat-button\r\n                        [disabled]=\"isAddFilesDisabled$ | async\"\r\n                        (click)=\"filePicker.click()\"\r\n                        style=\"display: flex; max-width: 480px; width: 100%; justify-content: center; margin-top: 16px;\">\r\n                    <mat-icon style=\"margin-right: 4px;\">open_in_new</mat-icon>\r\n                    Choose file via picker\r\n                </button>\r\n\r\n                <input hidden\r\n                       multiple\r\n                       (change)=\"onFileSelected($event)\"\r\n                       type=\"file\"\r\n                       #filePicker>\r\n\r\n            </dgp-empty-state>\r\n\r\n        </ng-template>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        .drop-target {\r\n            border: 2px dashed white;\r\n            max-height: 100%;\r\n        }\r\n\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FileManagerComponent implements AfterViewInit, OnDestroy {\r\n\r\n    isMaximized = false;\r\n\r\n    readonly isDropTargetVisible$ = this.store.select(isDropTargetVisible);\r\n    readonly fileItemListModel$ = this.store.select(getFileItemListModel);\r\n    readonly selectedFileItem$ = this.store.select(getSelectedFileItem);\r\n    readonly isRemoveFilesDisabled$ = this.store.select(isRemoveFilesDisabled);\r\n    readonly isAddFilesDisabled$ = this.store.select(isAddFilesDisabled);\r\n    readonly canOpenFileDrawer$ = this.store.select(canOpenFileDrawer);\r\n\r\n    readonly dragEnterHandler = (e) => {\r\n        e.preventDefault();\r\n        this.store.dispatch(showDropTarget());\r\n    };\r\n\r\n    readonly dragLeaveHandler = (e) => {\r\n        e.preventDefault();\r\n        this.store.dispatch(hideDropTarget());\r\n    };\r\n\r\n    readonly dragOverHandler = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    readonly dropHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const fileItems = getFileItemsFromFileList(e.dataTransfer.files);\r\n        this.store.dispatch(hideDropTarget());\r\n        this.store.dispatch(addFilesViaDrop({fileItems}));\r\n    };\r\n\r\n    constructor(\r\n        private readonly elementRef: ElementRef,\r\n        private readonly store: Store<FileUploadState>,\r\n        private readonly dialogRef: MatDialogRef<FileManagerComponent>,\r\n        @Inject(FILE_UPLOAD_CONFIG)\r\n        private readonly moduleConfig: FileUploadConfig\r\n    ) {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.elementRef.nativeElement.addEventListener(\"dragenter\", this.dragEnterHandler);\r\n        this.elementRef.nativeElement.addEventListener(\"dragleave\", this.dragLeaveHandler);\r\n        this.elementRef.nativeElement.addEventListener(\"drop\", this.dropHandler);\r\n        this.elementRef.nativeElement.addEventListener(\"dragover\", this.dragOverHandler);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.elementRef.nativeElement.removeEventListener(\"dragenter\", this.dragEnterHandler);\r\n        this.elementRef.nativeElement.removeEventListener(\"dragleave\", this.dragLeaveHandler);\r\n        this.elementRef.nativeElement.removeEventListener(\"drop\", this.dropHandler);\r\n        this.elementRef.nativeElement.removeEventListener(\"dragover\", this.dragOverHandler);\r\n    }\r\n\r\n    removeFileItem(fileItem: FileItem) {\r\n        this.store.dispatch(removeFile({fileItem}));\r\n    }\r\n\r\n    onFileSelected(e) {\r\n        const fileItems = getFileItemsFromFileList(e.target.files);\r\n        this.store.dispatch(addFilesViaDrop({fileItems}));\r\n    }\r\n\r\n    maximize() {\r\n        this.dialogRef.addPanelClass(this.moduleConfig.maximizedClass);\r\n        this.isMaximized = true;\r\n    }\r\n\r\n    minimize() {\r\n        this.dialogRef.removePanelClass(this.moduleConfig.maximizedClass);\r\n        this.isMaximized = false;\r\n    }\r\n}\r\n","import { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { addFilesViaDrop, closeFileManager, openFileManagerOverlay, removeFile, setConfig } from \"./actions\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { distinctUntilChanged, first, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { FileManagerComponent } from \"./containers/file-manager.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { fileUploadEntityStore } from \"./store\";\r\nimport { createKVSFromArray } from \"entity-store\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FILE_UPLOAD_CONFIG, FileUploadConfig, FileUploadQueryParams } from \"./models\";\r\nimport { getAllDirectories } from \"./selectors\";\r\n\r\n@Injectable()\r\nexport class FileUploadEffects {\r\n\r\n    @Effect()\r\n    readonly openFileManagerOverlay$ = this.actions$.pipe(\r\n        ofType(openFileManagerOverlay),\r\n        tap(action => {\r\n\r\n            if (action.fileItems) {\r\n                this.store.dispatch(\r\n                    fileUploadEntityStore.actions.composeEntityActions({\r\n                        set: {\r\n                            fileItem: createKVSFromArray(action.fileItems, x => x.fileItemId),\r\n                            directory: createKVSFromArray(action.directories, x => x.directoryId),\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n\r\n            if (action.config) {\r\n                this.store.dispatch(setConfig({\r\n                        config: action.config\r\n                    })\r\n                );\r\n            }\r\n\r\n        }),\r\n        switchMap(action => {\r\n\r\n            const dialogRef = this.matDialog\r\n                .open(FileManagerComponent, action.config ? action.config.fileManagerMatDialogConfig : this.moduleConfig.fileManagerMatDialogConfig);\r\n\r\n            if (action.selectedFileItemId) {\r\n                this.store.dispatch(\r\n                    fileUploadEntityStore.actions.composeEntityActions({\r\n                        select: {\r\n                            fileItem: [action.selectedFileItemId]\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n\r\n            return dialogRef.afterClosed();\r\n\r\n        }),\r\n        map(() => closeFileManager())\r\n    );\r\n\r\n    @Effect()\r\n    readonly addFilesViaDrop$ = this.actions$.pipe(\r\n        ofType(addFilesViaDrop),\r\n        switchMap(action => {\r\n            return this.store.select(getAllDirectories).pipe(\r\n                first(),\r\n                map(directories => {\r\n                    if (directories.length > 0) {\r\n\r\n                        const directory = directories[0];\r\n\r\n                        this.router.navigate([], {\r\n                            queryParams: {\r\n                                fileItemId: action.fileItems[0].fileItemId\r\n                            }\r\n                        });\r\n\r\n                        return fileUploadEntityStore.actions.composeEntityActions({\r\n                            add: {\r\n                                fileItem: createKVSFromArray(action.fileItems, x => x.fileItemId)\r\n                            },\r\n                            update: {\r\n                                directory: {\r\n                                    [directory.directoryId]: {\r\n                                        fileItemIds: directory.fileItemIds.concat(\r\n                                            action.fileItems.map(x => x.fileItemId)\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        this.router.navigate([], {\r\n                            queryParams: {\r\n                                fileItemId: action.fileItems[0].fileItemId\r\n                            }\r\n                        });\r\n\r\n                        return fileUploadEntityStore.actions.composeEntityActions({\r\n                            add: {\r\n                                fileItem: createKVSFromArray(action.fileItems, x => x.fileItemId),\r\n                                directory: {\r\n                                    [\"Files\"]: {\r\n                                        directoryId: \"Files\",\r\n                                        label: \"Files\",\r\n                                        fileItemIds: action.fileItems.map(x => x.fileItemId)\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n            );\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    readonly selectFileItem$ = this.activatedRoute.queryParams.pipe(\r\n        map((x: FileUploadQueryParams) => x.fileItemId),\r\n        distinctUntilChanged(),\r\n        map(fileItemId => {\r\n\r\n            if (!fileItemId) {\r\n                return fileUploadEntityStore.actions.composeEntityActions({\r\n                    select: {\r\n                        fileItem: []\r\n                    }\r\n                });\r\n            }\r\n\r\n            return fileUploadEntityStore.actions.composeEntityActions({\r\n                select: {\r\n                    fileItem: [fileItemId]\r\n                }\r\n            });\r\n\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    readonly removeFile$ = this.actions$.pipe(\r\n        ofType(removeFile),\r\n        map(action => fileUploadEntityStore.actions.composeEntityActions({\r\n            remove: {\r\n                fileItem: [action.fileItem.fileItemId]\r\n            }\r\n        }))\r\n    );\r\n\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly store: Store<any>,\r\n        private readonly matDialog: MatDialog,\r\n        private readonly activatedRoute: ActivatedRoute,\r\n        private readonly router: Router,\r\n        @Inject(FILE_UPLOAD_CONFIG)\r\n        private readonly moduleConfig: FileUploadConfig\r\n    ) {\r\n        this.store.dispatch(setConfig({\r\n            config: moduleConfig\r\n        }));\r\n    }\r\n\r\n}\r\n","import { RequestState } from \"./request-state.model\";\r\n\r\nexport interface RequestStoreState {\r\n    readonly requests: RequestState;\r\n}\r\n\r\nexport const requestStoreFeature = \"Requests\";\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { requestStoreFeature, RequestStoreState } from \"../models/request-store-state.model\";\r\n\r\nexport const requestStateSelector = createFeatureSelector<RequestStoreState>(\r\n    requestStoreFeature\r\n);\r\n\r\nexport const hasPendingRequests = createSelector(\r\n    requestStateSelector,\r\n    x => x.requests.pendingRequests > 0\r\n);\r\n\r\nexport const hasPendingRequestsSelector = createSelector(hasPendingRequests, x => x);\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { RequestState } from \"../../../request-store/models/request-state.model\";\r\nimport { hasPendingRequestsSelector } from \"../../../request-store/selectors/request.selectors\";\r\n\r\n@Component({\r\n    selector: \"dgp-page-header\",\r\n    template: `\r\n        <mat-toolbar color=\"primary\"\r\n                     class=\"toolbar\">\r\n            <div class=\"progress-bar-container\">\r\n                <mat-progress-bar *ngIf=\"hasPendingRequests$ | async\"\r\n                                  color=\"accent\"\r\n                                  mode=\"query\"></mat-progress-bar>\r\n            </div>\r\n            <ng-content></ng-content>\r\n        </mat-toolbar>\r\n    `,\r\n    styles: [`\r\n        .toolbar {\r\n            position: relative;\r\n        }\r\n\r\n        .progress-bar-container {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class PageHeaderComponent {\r\n\r\n    readonly hasPendingRequests$ = this.store.select(hasPendingRequestsSelector);\r\n\r\n    constructor(\r\n        private readonly store: Store<RequestState>\r\n    ) {\r\n    }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { PageHeaderComponent } from \"./page-header.component\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatProgressBarModule\r\n    ],\r\n    declarations: [\r\n        PageHeaderComponent\r\n    ],\r\n    exports: [\r\n        PageHeaderComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class DgpPageHeaderModule {\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { HamburgerMenuMode, PageMenuMode } from \"../models/hamburger-shell-state.model\";\r\n\r\n// hamburger menu\r\n\r\nexport const setHamburgerMenuState = createAction(\"[HamburgerShell] SetHamburgerMenuState\", props<{\r\n    readonly isHamburgerMenuOpen: boolean;\r\n    readonly hamburgerMenuMode: HamburgerMenuMode;\r\n}>());\r\n\r\nexport const toggleHamburgerMenu = createAction(\"[HamburgerShell] ToggleHamburgerMenu\");\r\n\r\nexport const closeHamburgerMenu = createAction(\"[HamburgerShell] CloseHamburgerMenu\");\r\n\r\n// list-details page\r\n\r\nexport const setListDetailsPageState = createAction(\"[HamburgerShell] SetListDetailsPageState\", props<{\r\n    readonly isPageMenuOpen: boolean;\r\n    readonly pageMenuMode: PageMenuMode;\r\n}>());\r\n\r\nexport const toggleListDetailsPageMenu = createAction(\"[HamburgerShell] ToggleListDetailsPageMenu\");\r\n\r\nexport const closeListDetailsMenu = createAction(\"[HamburgerShell] CloseListDetailsPageMenu\");\r\n","export const hamburgerShellStoreFeature = \"HamburgerShell\";\r\n","import {createFeatureSelector, createSelector} from \"@ngrx/store\";\r\nimport { hamburgerShellStoreFeature } from \"../models/hamburger-shell.store-feature\";\r\nimport { HamburgerShellState } from \"../models/hamburger-shell-state.model\";\r\n\r\nexport const hamburgerShellFeatureSelector = createFeatureSelector<HamburgerShellState>(\r\n    hamburgerShellStoreFeature\r\n);\r\n\r\nexport const hamburgerMenuModeSelector = createSelector(\r\n    hamburgerShellFeatureSelector, x => x.hamburgerMenuMode\r\n);\r\n\r\nexport const isHamburgerMenuOpenSelector = createSelector(\r\n    hamburgerShellFeatureSelector, x => x.isHamburgerMenuOpen\r\n);\r\n\r\nexport const pageMenuModeSelector = createSelector(\r\n    hamburgerShellFeatureSelector, x => x.pageMenuMode\r\n);\r\n\r\nexport const isPageMenuOpenSelector = createSelector(\r\n    hamburgerShellFeatureSelector, x => x.isPageMenuOpen\r\n);\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { closeListDetailsMenu, toggleListDetailsPageMenu } from \"../../actions/hamburger-shell.actions\";\r\nimport { isPageMenuOpenSelector, pageMenuModeSelector } from \"../../selectors/hamburger-shell.selectors\";\r\nimport { HamburgerShellState } from \"../../models/hamburger-shell-state.model\";\r\n\r\n@Component({\r\n    selector: \"dgp-list-details-page\",\r\n    template: `\r\n        <mat-drawer-container class=\"page-menu-drawer-container\">\r\n\r\n            <mat-drawer [mode]=\"pageMenuDrawerMode$ | async\"\r\n                        [opened]=\"isPageMenuDrawerOpen$ | async\"\r\n                        (closed)=\"closePageMenuDrawer()\"\r\n                        class=\"page-menu-drawer mat-elevation-z4\">\r\n\r\n                <ng-content select=\"[dgp-list-details-page-menu]\"></ng-content>\r\n\r\n            </mat-drawer>\r\n\r\n            <mat-drawer-content class=\"page-menu-drawer-content\">\r\n\r\n                <div class=\"page-menu-drawer-toggle-container\">\r\n\r\n                    <button mat-icon-button\r\n                            (click)=\"togglePageMenuDrawer()\"\r\n                            matTooltip=\"Toggle menu drawer\">\r\n                        <mat-icon *ngIf=\"isPageMenuDrawerOpen$ | async; else closedIcon\">\r\n                            arrow_back\r\n                        </mat-icon>\r\n                        <ng-template #closedIcon>\r\n                            <mat-icon>arrow_forward</mat-icon>\r\n                        </ng-template>\r\n                    </button>\r\n\r\n                </div>\r\n\r\n                <ng-content></ng-content>\r\n\r\n            </mat-drawer-content>\r\n\r\n        </mat-drawer-container>\r\n\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            overflow: auto;\r\n            flex-grow: 1;\r\n        }\r\n\r\n        .page-menu-drawer-container {\r\n            display: flex;\r\n            flex-grow: 1;\r\n            overflow: inherit;\r\n        }\r\n\r\n        .page-menu-drawer {\r\n            width: 360px;\r\n        }\r\n\r\n        .page-menu-drawer-content {\r\n            overflow: auto;\r\n            flex-grow: 1;\r\n            display: flex;\r\n            position: relative;\r\n        }\r\n\r\n        .page-menu-drawer-toggle-container {\r\n            display: flex;\r\n            align-items: center;\r\n            top: 0;\r\n            bottom: 0;\r\n            position: absolute;\r\n        }\r\n\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class ListDetailsPageComponent {\r\n\r\n    readonly pageMenuDrawerMode$ = this.store.select(pageMenuModeSelector);\r\n    readonly isPageMenuDrawerOpen$ = this.store.select(isPageMenuOpenSelector);\r\n\r\n    constructor(\r\n        private readonly store: Store<HamburgerShellState>\r\n    ) {\r\n    }\r\n\r\n    closePageMenuDrawer(): void {\r\n        this.store.dispatch(closeListDetailsMenu());\r\n    }\r\n\r\n    togglePageMenuDrawer(): void {\r\n        this.store.dispatch(toggleListDetailsPageMenu());\r\n    }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-list-details-page-content\",\r\n    template: `<ng-content></ng-content>`,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            max-width: 800px;\r\n            width: 100%;\r\n            padding: 32px;\r\n            justify-self: center;\r\n            margin-right: auto;\r\n            margin-left: auto;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})export class ListDetailsPageContentComponent {\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ListDetailsPageComponent } from \"./list-details-page.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { ListDetailsPageContentComponent } from \"./list-details-page-content.component\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSidenavModule,\r\n        MatTooltipModule\r\n    ],\r\n    declarations: [\r\n        ListDetailsPageContentComponent,\r\n        ListDetailsPageComponent\r\n    ],\r\n    exports: [\r\n        ListDetailsPageContentComponent,\r\n        ListDetailsPageComponent\r\n    ]\r\n})\r\nexport class DgpListDetailsPageModule {\r\n}\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { DragFileListenerDirective } from \"./directive/drag-file-listener.directive\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { FileUploadEffects } from \"./effects\";\r\nimport { FileManagerComponent } from \"./containers/file-manager.component\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { DgpPageHeaderModule } from \"../hamburger-shell/components/page-header/page-header.module\";\r\nimport { DgpListDetailsPageModule } from \"../hamburger-shell/components/list-details-page/list-details-page.module\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { defaultFileUploadConfig, FILE_UPLOAD_CONFIG, fileUploadStoreFeature } from \"./models\";\r\nimport { fileUploadReducer, fileUploadReducerProvider } from \"./store\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { DgpSpacerModule } from \"../spacer/spacer.module\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { DgpEmptyStateModule } from \"../empty-state/empty-state.module\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { OpenFileManagerViaShortKeyDirective } from \"./directive/open-file-manager-via-short-key.directive\";\r\nimport { DgpFileViewerModule } from \"../file-viewer/file-viewer.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatDialogModule,\r\n        StoreModule.forFeature(fileUploadStoreFeature, fileUploadReducer),\r\n        EffectsModule.forFeature([\r\n            FileUploadEffects\r\n        ]),\r\n        DgpPageHeaderModule,\r\n        DgpListDetailsPageModule,\r\n        MatListModule,\r\n        RouterModule,\r\n        MatIconModule,\r\n        DgpSpacerModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        DgpEmptyStateModule,\r\n        MatTooltipModule,\r\n        DgpFileViewerModule\r\n    ],\r\n    declarations: [\r\n        DragFileListenerDirective,\r\n        OpenFileManagerViaShortKeyDirective,\r\n        FileManagerComponent\r\n    ],\r\n    exports: [\r\n        DragFileListenerDirective,\r\n        OpenFileManagerViaShortKeyDirective\r\n    ],\r\n    entryComponents: [\r\n        FileManagerComponent\r\n    ],\r\n    providers: [\r\n        fileUploadReducerProvider\r\n    ]\r\n})\r\nexport class DgpFileUploadModule {\r\n\r\n    static forRoot(config = defaultFileUploadConfig): ModuleWithProviders<DgpFileUploadModule> {\r\n        return {\r\n            ngModule: DgpFileUploadModule,\r\n            providers: [{\r\n                provide: FILE_UPLOAD_CONFIG,\r\n                useValue: config\r\n            }]\r\n        };\r\n    }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { closeHamburgerMenu } from \"../actions/hamburger-shell.actions\";\r\nimport { hamburgerMenuModeSelector, isHamburgerMenuOpenSelector } from \"../selectors/hamburger-shell.selectors\";\r\nimport { hasPendingRequestsSelector } from \"../../request-store/selectors/request.selectors\";\r\nimport { HamburgerShellState } from \"../models/hamburger-shell-state.model\";\r\n\r\n@Component({\r\n    selector: \"dgp-hamburger-shell\",\r\n    template: `\r\n        <mat-drawer-container class=\"hamburger-menu-drawer-container\">\r\n\r\n            <mat-drawer [mode]=\"hamburgerMenuMode$ | async\"\r\n                        [opened]=\"isHamburgerMenuOpen$ | async\"\r\n                        class=\"hamburger-menu-drawer mat-elevation-z4\"\r\n                        (closed)=\"closeHamburgerMenu()\">\r\n\r\n                <div class=\"progress-bar-container\">\r\n                    <mat-progress-bar *ngIf=\"hasPendingRequests$ | async\"\r\n                                      color=\"accent\"\r\n                                      mode=\"query\"></mat-progress-bar>\r\n                </div>\r\n\r\n                <ng-content select=\"[dgp-hamburger-menu]\"></ng-content>\r\n\r\n            </mat-drawer>\r\n\r\n            <mat-drawer-content class=\"hamburger-menu-drawer-content\">\r\n\r\n                <ng-content></ng-content>\r\n\r\n            </mat-drawer-content>\r\n\r\n        </mat-drawer-container>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            overflow: auto;\r\n        }\r\n\r\n        .hamburger-menu-drawer-container {\r\n            flex-grow: 1;\r\n            display: flex !important;\r\n        }\r\n\r\n        .hamburger-menu-drawer {\r\n            width: 240px;\r\n        }\r\n\r\n        .progress-bar-container {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n        }\r\n\r\n        .hamburger-menu-drawer-content {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            height: auto;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class HamburgerShellComponent {\r\n\r\n    readonly hasPendingRequests$ = this.store.select(hasPendingRequestsSelector);\r\n    readonly isHamburgerMenuOpen$ = this.store.select(isHamburgerMenuOpenSelector);\r\n    readonly hamburgerMenuMode$ = this.store.select(hamburgerMenuModeSelector);\r\n\r\n    constructor(\r\n        private readonly store: Store<HamburgerShellState>\r\n    ) {\r\n    }\r\n\r\n    closeHamburgerMenu(): void {\r\n        this.store.dispatch(closeHamburgerMenu());\r\n    }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { toggleHamburgerMenu } from \"../../actions/hamburger-shell.actions\";\r\nimport { HamburgerShellState } from \"../../models/hamburger-shell-state.model\";\r\n\r\n@Component({\r\n    selector: \"dgp-hamburger-menu-toggle\",\r\n    template: `\r\n        <button mat-icon-button\r\n                (click)=\"toggleHamburgerMenu()\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            margin-right: 8px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class HamburgerMenuToggleComponent {\r\n\r\n    constructor(\r\n        private readonly store: Store<HamburgerShellState>\r\n    ) {\r\n    }\r\n\r\n    toggleHamburgerMenu(): void {\r\n        this.store.dispatch(toggleHamburgerMenu());\r\n    }\r\n\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {HamburgerMenuToggleComponent} from \"./hamburger-menu-toggle.component\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule\r\n    ],\r\n    declarations: [\r\n        HamburgerMenuToggleComponent\r\n    ],\r\n    exports: [\r\n        HamburgerMenuToggleComponent\r\n    ]\r\n})\r\nexport class DgpHamburgerMenuToggleModule {\r\n}\r\n","import { Breakpoints } from \"@angular/cdk/layout\";\r\n\r\nexport enum HamburgerShellMode {\r\n    Responsive,\r\n    Overlay,\r\n    SideNav\r\n}\r\n\r\nexport enum ListDetailsPageMode {\r\n    Responsive,\r\n    Overlay,\r\n    SideNav\r\n}\r\n\r\nexport interface HamburgerShellConfig {\r\n    readonly hamburgerShellMode: HamburgerShellMode;\r\n    // Relevant for responsive mode\r\n    readonly hamburgerMenuBreakpoints?: ReadonlyArray<string>;\r\n\r\n    readonly listDetailsPageMode: ListDetailsPageMode;\r\n    // Relevant for responsive mode\r\n    readonly listDetailsPageMenuBreakpoints?: ReadonlyArray<string>;\r\n}\r\n\r\nexport const responsiveHamburgerShellConfig: HamburgerShellConfig = {\r\n    hamburgerShellMode: HamburgerShellMode.Responsive,\r\n\r\n    hamburgerMenuBreakpoints: [\r\n        Breakpoints.XLarge\r\n    ],\r\n\r\n    listDetailsPageMode: ListDetailsPageMode.Responsive,\r\n\r\n    listDetailsPageMenuBreakpoints: [\r\n        Breakpoints.Large,\r\n        Breakpoints.XLarge\r\n    ]\r\n};\r\n\r\nexport const sideNavHamburgerShellConfig: HamburgerShellConfig = {\r\n    hamburgerShellMode: HamburgerShellMode.SideNav,\r\n    listDetailsPageMode: ListDetailsPageMode.SideNav\r\n};\r\n\r\nexport const overlayHamburgerShellConfig: HamburgerShellConfig = {\r\n    hamburgerShellMode: HamburgerShellMode.Overlay,\r\n    listDetailsPageMode: ListDetailsPageMode.Overlay\r\n};\r\n\r\nexport const defaultHamburgerShellConfig = responsiveHamburgerShellConfig;\r\n","import { InjectionToken, ValueProvider } from \"@angular/core\";\r\nimport {\r\n    defaultHamburgerShellConfig,\r\n    HamburgerShellConfig, overlayHamburgerShellConfig,\r\n    sideNavHamburgerShellConfig\r\n} from \"./hamburger-shell-config.model\";\r\n\r\nexport const HAMBURGER_SHELL_CONFIG = new InjectionToken<HamburgerShellConfig>(\"HamburgerShellConfig\");\r\n\r\n\r\nexport interface HamburgerShellConfigProvider extends ValueProvider {\r\n    provide: typeof HAMBURGER_SHELL_CONFIG;\r\n}\r\n\r\nexport const sideNavHamburgerShellConfigProvider: HamburgerShellConfigProvider = {\r\n    provide: HAMBURGER_SHELL_CONFIG,\r\n    useValue: sideNavHamburgerShellConfig\r\n};\r\n\r\nexport const overlayHamburgerShellConfigProvider: HamburgerShellConfigProvider = {\r\n    provide: HAMBURGER_SHELL_CONFIG,\r\n    useValue: overlayHamburgerShellConfig\r\n};\r\n\r\nexport const defaultHamburgerShellConfigProvider: HamburgerShellConfigProvider = {\r\n    provide: HAMBURGER_SHELL_CONFIG,\r\n    useValue: defaultHamburgerShellConfig\r\n};\r\n\r\n","import {\r\n    closeHamburgerMenu, closeListDetailsMenu, setHamburgerMenuState, setListDetailsPageState,\r\n    toggleHamburgerMenu, toggleListDetailsPageMenu\r\n} from \"../actions/hamburger-shell.actions\";\r\nimport { FactoryProvider, InjectionToken } from \"@angular/core\";\r\nimport { ActionReducer, createReducer, on } from \"@ngrx/store\";\r\nimport { HamburgerShellState } from \"../models/hamburger-shell-state.model\";\r\n\r\nconst initialState: HamburgerShellState = {\r\n    hamburgerMenuMode: \"side\",\r\n    isHamburgerMenuOpen: true,\r\n    pageMenuMode: \"side\",\r\n    isPageMenuOpen: true\r\n};\r\n\r\nexport const hamburgerShellReducerImpl = createReducer(initialState,\r\n    on(setHamburgerMenuState, ((state, action) => {\r\n        return {\r\n            ...state,\r\n            hamburgerMenuMode: action.hamburgerMenuMode,\r\n            isHamburgerMenuOpen: action.isHamburgerMenuOpen\r\n        };\r\n    })),\r\n    on(toggleHamburgerMenu, ((state) => {\r\n        return {\r\n            ...state,\r\n            isHamburgerMenuOpen: !state.isHamburgerMenuOpen\r\n        };\r\n    })),\r\n    on(closeHamburgerMenu, ((state) => {\r\n        return {\r\n            ...state,\r\n            isHamburgerMenuOpen: false\r\n        };\r\n    })),\r\n    on(setListDetailsPageState, ((state, action) => {\r\n        return {\r\n            ...state,\r\n            pageMenuMode: action.pageMenuMode,\r\n            isPageMenuOpen: action.isPageMenuOpen,\r\n        };\r\n    })),\r\n    on(toggleListDetailsPageMenu, ((state) => {\r\n        return {\r\n            ...state,\r\n            isPageMenuOpen: !state.isPageMenuOpen\r\n        };\r\n    })),\r\n    on(closeListDetailsMenu, ((state) => {\r\n        return {\r\n            ...state,\r\n            isPageMenuOpen: false\r\n        };\r\n    }))\r\n);\r\n\r\nexport const hamburgerShellReducer = new InjectionToken<ActionReducer<HamburgerShellState>>(\"hamburgerShellReducer\");\r\n\r\nexport function hamburgerShellReducerFactory() {\r\n    return hamburgerShellReducerImpl;\r\n}\r\n\r\nexport const hamburgerShellReducerProvider: FactoryProvider = {\r\n    provide: hamburgerShellReducer,\r\n    useFactory: hamburgerShellReducerFactory\r\n};\r\n\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { debounceTime, filter, map, switchMap } from \"rxjs/operators\";\r\nimport { BreakpointObserver } from \"@angular/cdk/layout\";\r\nimport { setHamburgerMenuState, setListDetailsPageState } from \"../actions/hamburger-shell.actions\";\r\nimport { HamburgerShellConfig, HamburgerShellMode, ListDetailsPageMode } from \"../models/hamburger-shell-config.model\";\r\nimport { HAMBURGER_SHELL_CONFIG } from \"../models/hamburger-shell-config-provider.model\";\r\nimport { HamburgerShellState } from \"../models/hamburger-shell-state.model\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class HamburgerShellEffects {\r\n\r\n    @Effect()\r\n    readonly setHamburgerMenuState$ = of(this.hamburgerShellConfig.hamburgerShellMode)\r\n        .pipe(\r\n            filter(x => x === HamburgerShellMode.Responsive),\r\n            switchMap(() => {\r\n                return this.breakpointObserver.observe(\r\n                    this.hamburgerShellConfig.hamburgerMenuBreakpoints as string[]\r\n                );\r\n            }),\r\n            debounceTime(50),\r\n            map(result => {\r\n                const isHamburgerMenuOpen = result.matches;\r\n                const hamburgerMenuMode = isHamburgerMenuOpen ? \"side\" : \"over\";\r\n\r\n                return setHamburgerMenuState({\r\n                    isHamburgerMenuOpen,\r\n                    hamburgerMenuMode\r\n                });\r\n\r\n            })\r\n        );\r\n\r\n    @Effect()\r\n    readonly setListDetailsPageLayout$ = of(this.hamburgerShellConfig.listDetailsPageMode)\r\n        .pipe(\r\n            filter(x => x === ListDetailsPageMode.Responsive),\r\n            switchMap(() => {\r\n                return this.breakpointObserver.observe(\r\n                    this.hamburgerShellConfig.listDetailsPageMenuBreakpoints as string[]\r\n                );\r\n            }),\r\n            debounceTime(50),\r\n            map(result => {\r\n\r\n                const isPageMenuOpen = result.matches;\r\n                const pageMenuMode = isPageMenuOpen ? \"side\" : \"over\";\r\n\r\n                return setListDetailsPageState({\r\n                    isPageMenuOpen,\r\n                    pageMenuMode\r\n                });\r\n\r\n            })\r\n        );\r\n\r\n    constructor(\r\n        private readonly actions: Actions,\r\n        private readonly store: Store<HamburgerShellState>,\r\n        private readonly breakpointObserver: BreakpointObserver,\r\n        @Inject(HAMBURGER_SHELL_CONFIG)\r\n        private readonly hamburgerShellConfig: HamburgerShellConfig\r\n    ) {\r\n        if (hamburgerShellConfig.hamburgerShellMode === HamburgerShellMode.SideNav) {\r\n            this.store.dispatch(setHamburgerMenuState({\r\n                isHamburgerMenuOpen: true,\r\n                hamburgerMenuMode: \"side\"\r\n            }));\r\n        } else if (hamburgerShellConfig.hamburgerShellMode === HamburgerShellMode.Overlay) {\r\n            this.store.dispatch(setHamburgerMenuState({\r\n                isHamburgerMenuOpen: false,\r\n                hamburgerMenuMode: \"over\"\r\n            }));\r\n        }\r\n\r\n        if (hamburgerShellConfig.listDetailsPageMode === ListDetailsPageMode.SideNav) {\r\n            this.store.dispatch(setListDetailsPageState({\r\n                isPageMenuOpen: true,\r\n                pageMenuMode: \"side\"\r\n            }));\r\n        } else if (hamburgerShellConfig.listDetailsPageMode === ListDetailsPageMode.Overlay) {\r\n            this.store.dispatch(setListDetailsPageState({\r\n                isPageMenuOpen: false,\r\n                pageMenuMode: \"over\"\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { LayoutModule } from \"@angular/cdk/layout\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { hamburgerShellReducer, hamburgerShellReducerProvider } from \"./reducers/hamburger-shell.reducer\";\r\nimport {\r\n    defaultHamburgerShellConfigProvider,\r\n    HamburgerShellConfigProvider\r\n} from \"./models/hamburger-shell-config-provider.model\";\r\nimport { hamburgerShellStoreFeature } from \"./models/hamburger-shell.store-feature\";\r\nimport { HamburgerShellComponent } from \"./components/hamburger-shell.component\";\r\nimport { HamburgerShellEffects } from \"./effects/hamburger-shell.effects\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        LayoutModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatProgressBarModule,\r\n        MatSidenavModule,\r\n        StoreModule.forFeature(\r\n            hamburgerShellStoreFeature,\r\n            hamburgerShellReducer\r\n        ),\r\n        EffectsModule.forFeature([\r\n            HamburgerShellEffects\r\n        ]),\r\n        RouterModule\r\n    ],\r\n    providers: [\r\n        hamburgerShellReducerProvider\r\n    ],\r\n    declarations: [\r\n        HamburgerShellComponent\r\n    ],\r\n    exports: [\r\n        HamburgerShellComponent\r\n    ]\r\n})\r\nexport class DgpHamburgerShellModule {\r\n\r\n    static forRoot(\r\n        configProvider: HamburgerShellConfigProvider = defaultHamburgerShellConfigProvider\r\n    ): ModuleWithProviders<DgpHamburgerShellModule> {\r\n        return {\r\n            ngModule: DgpHamburgerShellModule,\r\n            providers: [\r\n                configProvider\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const hotReload = createAction( \"[HMR] Reload\", props<{ readonly payload: any }>());\r\n","import {ActionReducer} from \"@ngrx/store\";\r\nimport { hotReload } from \"./hmr.actions\";\r\n\r\n/**\r\n * Generate a reducer to set the root state in dev mode for HMR\r\n */\r\nexport function hmrReducer(x: ActionReducer<any>): ActionReducer<any> {\r\n\r\n  return (state: any, action: typeof hotReload) => {\r\n    if (action.type === \"[HMR] Reload\") {\r\n      return (action as any).payload;\r\n    }\r\n    return x(state, action);\r\n  };\r\n\r\n}\r\n","import { ApplicationRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { hotReload } from \"./hmr.actions\";\r\nimport { createNewHosts, removeNgStyles } from \"@angularclass/hmr\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\nexport class DgpNgApp {\r\n\r\n    constructor(public readonly appRef: ApplicationRef,\r\n                protected readonly ngrxStore: Store<any>) {\r\n    }\r\n\r\n    //noinspection JSUnusedGlobalSymbols\r\n    hmrOnInit(store: any) {\r\n        if (!store || !store.rootState) {\r\n            return;\r\n        }\r\n        if (store.rootState) {\r\n            this.ngrxStore.dispatch(hotReload({ payload: store.rootState }));\r\n        }\r\n\r\n        Object.keys(store)\r\n            .forEach(prop => delete store[prop]);\r\n    }\r\n\r\n    //noinspection JSUnusedGlobalSymbols\r\n    hmrOnDestroy(store: any) {\r\n        const cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\r\n\r\n        store.disposeOldHosts = createNewHosts(cmpLocation);\r\n\r\n        this.ngrxStore\r\n            .pipe(take(1))\r\n            .subscribe(s => store.rootState = s);\r\n\r\n        let queryResults = document.querySelectorAll(\".cdk-overlay-container\");\r\n        queryResults.forEach(x => {\r\n            x.parentNode.removeChild(x);\r\n        });\r\n\r\n        queryResults = document.querySelectorAll(\".cdk-visually-hidden\");\r\n        queryResults.forEach(x => {\r\n            x.parentNode.removeChild(x);\r\n        });\r\n\r\n        removeNgStyles();\r\n    }\r\n\r\n    //noinspection JSUnusedGlobalSymbols\r\n    hmrAfterDestroy(store: any) {\r\n        store.disposeOldHosts();\r\n        delete store.disposeOldHosts;\r\n    }\r\n}\r\n","import { Action, createAction, props } from \"@ngrx/store\";\r\nimport { LogEntry } from \"../models/log.models\";\r\n\r\nexport interface LogErrorPayload {\r\n    readonly title: string;\r\n    readonly error?: any;\r\n}\r\n\r\nexport const logError = createAction(\"[Log] LogError\", props<{\r\n    readonly payload: LogErrorPayload\r\n}>());\r\n\r\nexport const addLogEntry = createAction(\"[Log] AddLogEntry\", props<{ readonly logEntry: LogEntry }>());\r\n\r\nexport const logErrorActionType = logError.type;\r\n\r\nexport class LogErrorAction implements Action {\r\n    readonly type = logErrorActionType;\r\n\r\n    constructor(public readonly payload: LogErrorPayload) {\r\n    }\r\n}\r\n","import { EntityStateMap } from \"entity-store\";\r\n\r\nexport enum Severity {\r\n    Error\r\n}\r\n\r\nexport interface LogEntry {\r\n    readonly timeStamp: Date;\r\n    readonly title: string;\r\n    readonly content?: any;\r\n    readonly severity: Severity;\r\n}\r\n\r\nexport interface LogStoreSchema {\r\n    readonly logEntry: LogEntry;\r\n}\r\n\r\nexport interface LogState extends EntityStateMap<LogStoreSchema> {\r\n}\r\n\r\nexport type LogStoreFeature = \"LogStore\";\r\nexport const logStoreFeature: LogStoreFeature = \"LogStore\";\r\n","import { createEntityStore } from \"entity-store\";\r\nimport { LogStoreFeature, LogStoreSchema } from \"../models/log.models\";\r\n\r\nexport const logStore = createEntityStore<LogStoreSchema, LogStoreFeature>({\r\n    entityTypes: [\r\n        \"logEntry\"\r\n    ],\r\n    storeFeature: \"LogStore\"\r\n});\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { getAll } from \"entity-store\";\r\nimport { LogState, logStoreFeature } from \"../models/log.models\";\r\nimport { logStore } from \"../reducers/log.reducer\";\r\n\r\nexport const logFeatureSelector = createFeatureSelector<LogState>(logStoreFeature);\r\n\r\nexport const getLogEntryState = createSelector(\r\n    logFeatureSelector,\r\n    x => x.logEntry\r\n);\r\n\r\nexport const getAllLogEntries = createSelector(\r\n    getLogEntryState, x => {\r\n        const entries = getAll(x);\r\n        entries.sort((a, b) => {\r\n            return b.timeStamp.getTime() - a.timeStamp.getTime();\r\n        });\r\n        return entries;\r\n    });\r\n\r\n\r\nexport const getSelectedLogEntry = createSelector(\r\n    logFeatureSelector, logStore.selectors.logEntry.getFirstSelected\r\n);\r\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { getSelectedLogEntry } from \"../selectors/log.selectors\";\r\nimport { LogState } from \"../models/log.models\";\r\nimport { logStore } from \"../reducers/log.reducer\";\r\nimport { filter } from \"rxjs/operators\";\r\n\r\n@Component({\r\n    selector: \"dgp-log-page\",\r\n    template: `\r\n        <dgp-page-header>\r\n            <dgp-hamburger-menu-toggle></dgp-hamburger-menu-toggle>\r\n            Log\r\n        </dgp-page-header>\r\n\r\n        <dgp-list-details-page>\r\n\r\n            <ng-container dgp-list-details-page-menu>\r\n                <dgp-log-entry-list></dgp-log-entry-list>\r\n            </ng-container>\r\n\r\n            <dgp-list-details-page-content>\r\n                <dgp-log-entry-details [logEntry]=\"logEntry$ | async\"></dgp-log-entry-details>\r\n            </dgp-list-details-page-content>\r\n\r\n        </dgp-list-details-page>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class LogPageComponent {\r\n\r\n    readonly logEntry$ = this.store.select(getSelectedLogEntry);\r\n\r\n    constructor(\r\n        private readonly store: Store<LogState>,\r\n        private readonly activatedRoute: ActivatedRoute\r\n    ) {\r\n        activatedRoute.params\r\n            .pipe(filter(params => params.logEntryId))\r\n            .subscribe(params => {\r\n\r\n                this.store.dispatch(\r\n                    logStore.actions.composeEntityActions({\r\n                        select: {\r\n                            logEntry: [params.logEntryId]\r\n                        }\r\n                    })\r\n                );\r\n\r\n            });\r\n    }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Severity, LogState } from \"../models/log.models\";\r\nimport { getAllLogEntries } from \"../selectors/log.selectors\";\r\n\r\n@Component({\r\n    selector: \"dgp-log-entry-list\",\r\n    template: `\r\n        <mat-nav-list *ngIf=\"hasLogEntries$ | async; else emptyState\">\r\n            <h3 mat-subheader>Entries</h3>\r\n            <a mat-list-item\r\n               *ngFor=\"let logEntry of (logEntries$ | async)\"\r\n               [routerLink]=\"['/logEntries', logEntry.timeStamp.toString()]\">\r\n                <mat-icon mat-list-icon\r\n                          *ngIf=\"logEntry.severity === severityEnum.Error\">\r\n                    error\r\n                </mat-icon>\r\n                <div mat-line>\r\n                    {{ logEntry.title }}\r\n                </div>\r\n                <div mat-line>\r\n                    {{ logEntry.timeStamp | date:'medium'}}\r\n                </div>\r\n            </a>\r\n        </mat-nav-list>\r\n\r\n        <ng-template #emptyState>\r\n            <dgp-empty-state matIconName=\"error\"\r\n                             title=\"No entries available\">\r\n\r\n            </dgp-empty-state>\r\n        </ng-template>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-grow: 1;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class LogEntryListComponent {\r\n\r\n    readonly severityEnum = Severity;\r\n\r\n    readonly logEntries$ = this.store.select(getAllLogEntries);\r\n\r\n    readonly hasLogEntries$ = this.logEntries$.pipe(\r\n        map(x => x && x.length > 0)\r\n    );\r\n\r\n    constructor(\r\n        private readonly store: Store<LogState>\r\n    ) {\r\n    }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\r\nimport { Severity, LogEntry } from \"../models/log.models\";\r\n\r\n@Component({\r\n    selector: \"dgp-log-entry-details\",\r\n    template: `\r\n        <ng-container *ngIf=\"logEntry; else noLogEntryTemplate\">\r\n\r\n            <div class=\"header\">\r\n                <mat-icon class=\"header__icon\"\r\n                          *ngIf=\"logEntry.severity === severityEnum.Error\">\r\n                    error\r\n                </mat-icon>\r\n                <div class=\"header__title-container\">\r\n                    <h1 class=\"header__title mat-h1\">\r\n                        {{ logEntry.title }}\r\n                    </h1>\r\n                    <div class=\"header__subtitle\">\r\n                        {{ logEntry.timeStamp | date:'medium' }}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-divider class=\"vertical-separator\"></mat-divider>\r\n\r\n            <div class=\"content\">\r\n                <h2 class=\"content__heading mat-h2\">\r\n                    Severity\r\n                </h2>\r\n                <div class=\"content__body\">\r\n                    <ng-container *ngIf=\"logEntry.severity === severityEnum.Error\">\r\n                        Error\r\n                    </ng-container>\r\n                </div>\r\n                <h2 class=\"content__heading mat-h2\">\r\n                    Content\r\n                </h2>\r\n                <div class=\"content__body\"\r\n                     *ngIf=\"logEntry.content; else noContentTemplate\">\r\n                    {{ logEntry.content | json }}\r\n                </div>\r\n                <ng-template #noContentTemplate>\r\n                    <div class=\"content__placeholder\">\r\n                        This log entry doesn't contain additional content.\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n\r\n        </ng-container>\r\n\r\n        <ng-template #noLogEntryTemplate>\r\n            <dgp-empty-state title=\"No entry selected\"\r\n                             matIconName=\"error\">\r\n                Pick one from the list to the left.\r\n            </dgp-empty-state>\r\n        </ng-template>\r\n\r\n\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-grow: 1;\r\n            overflow: auto;\r\n            word-break: break-word;\r\n        }\r\n\r\n        .header {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        .header__icon {\r\n            font-size: 40px;\r\n            width: 40px;\r\n            height: 40px;\r\n            margin-left: 16px;\r\n            margin-right: 16px;\r\n        }\r\n\r\n        .header__title-container {\r\n            flex-grow: 1;\r\n        }\r\n\r\n        .header__title {\r\n            margin-top: 8px;\r\n            margin-bottom: 8px;\r\n        }\r\n\r\n        .header__subtitle {\r\n            display: flex;\r\n        }\r\n\r\n        .content {\r\n        }\r\n\r\n        .content__heading {\r\n            margin-top: 8px;\r\n            margin-bottom: 8px;\r\n        }\r\n\r\n        .content__body {\r\n\r\n        }\r\n\r\n        .content__placeholder {\r\n\r\n        }\r\n\r\n        .vertical-separator {\r\n            margin-top: 16px;\r\n            margin-bottom: 16px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class LogEntryDetailsComponent {\r\n\r\n    readonly severityEnum = Severity;\r\n\r\n    @Input()\r\n    logEntry: LogEntry;\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { defaultIfEmpty, map, switchMap } from \"rxjs/operators\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { addLogEntry, logError } from \"../actions/log.actions\";\r\nimport { LogEntry, Severity } from \"../models/log.models\";\r\nimport { logStore } from \"../reducers/log.reducer\";\r\n\r\n@Injectable()\r\nexport class LogEffects {\r\n\r\n    @Effect()\r\n    readonly logError$ = this.actions$.pipe(\r\n        ofType(logError),\r\n        map(action => {\r\n\r\n            const logEntry: LogEntry = {\r\n                timeStamp: new Date(),\r\n                title: action.payload.title,\r\n                content: action.payload.error,\r\n                severity: Severity.Error\r\n            };\r\n\r\n            return addLogEntry({ logEntry });\r\n\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    readonly addLogEntry$ = this.actions$.pipe(\r\n        ofType(addLogEntry),\r\n        map(action => {\r\n\r\n            return logStore.actions.composeEntityActions({\r\n                add: {\r\n                    logEntry: {\r\n                        [action.logEntry.timeStamp.toString()]: action.logEntry\r\n                    }\r\n                }\r\n            });\r\n\r\n        })\r\n    );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    readonly showErrorSnack = this.actions$.pipe(\r\n        ofType(addLogEntry),\r\n        switchMap(action => {\r\n\r\n            return this.matSnackbar.open(action.logEntry.title, \"Show log\", {\r\n                duration: 5000\r\n            })\r\n                .onAction()\r\n                .pipe(\r\n                    map(() => {\r\n                        return this.router.navigate([\"/logEntries\", action.logEntry.timeStamp.toString()]);\r\n                    }),\r\n                    defaultIfEmpty(null)\r\n                );\r\n\r\n        })\r\n    );\r\n\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly matSnackbar: MatSnackBar,\r\n        private readonly router: Router\r\n    ) {\r\n    }\r\n\r\n}\r\n","import { FactoryProvider, InjectionToken, NgModule } from \"@angular/core\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { DgpEmptyStateModule } from \"../empty-state/empty-state.module\";\r\nimport { logStore } from \"./reducers/log.reducer\";\r\nimport { LogPageComponent } from \"./components/log-page.component\";\r\nimport { LogEntryListComponent } from \"./components/log-entry-list.component\";\r\nimport { LogEntryDetailsComponent } from \"./components/log-entry-details.component\";\r\nimport { logStoreFeature } from \"./models/log.models\";\r\nimport { LogEffects } from \"./effects/log.effects\";\r\nimport { DgpHamburgerMenuToggleModule } from \"../hamburger-shell/components/hamburger-menu-toggle/hamburger-menu-toggle.module\";\r\nimport { DgpListDetailsPageModule } from \"../hamburger-shell/components/list-details-page/list-details-page.module\";\r\nimport { DgpPageHeaderModule } from \"../hamburger-shell/components/page-header/page-header.module\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\n\r\nexport const logStoreReducer = new InjectionToken<typeof logStore.reducers>(\"LogStoreReducer\");\r\n\r\nexport function createLogStoreReducer() {\r\n    return logStore.reducers;\r\n}\r\n\r\nexport const logStoreReducerProvider: FactoryProvider = {\r\n    provide: logStoreReducer,\r\n    useFactory: createLogStoreReducer\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n\r\n        StoreModule.forFeature(logStoreFeature, logStoreReducer),\r\n        EffectsModule.forFeature([\r\n            LogEffects\r\n        ]),\r\n\r\n        RouterModule.forChild([{\r\n            path: \"logEntries\",\r\n            component: LogPageComponent,\r\n        }, {\r\n            path: \"logEntries/:logEntryId\",\r\n            component: LogPageComponent,\r\n        }]),\r\n\r\n        MatDividerModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSnackBarModule,\r\n\r\n        DgpHamburgerMenuToggleModule,\r\n        DgpPageHeaderModule,\r\n        DgpListDetailsPageModule,\r\n        DgpEmptyStateModule\r\n    ],\r\n    declarations: [\r\n        LogEntryDetailsComponent,\r\n        LogEntryListComponent,\r\n        LogPageComponent\r\n    ],\r\n    providers: [\r\n        logStoreReducerProvider\r\n    ]\r\n})\r\nexport class DgpLogModule {\r\n}\r\n","import { Action, createAction, props } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport const scheduleRequestActionType = \"[ScheduleRequest] ScheduleRequestAction\";\r\n\r\nexport interface ScheduleRequestActionPayload<T> {\r\n    /**\r\n     * The request to be processed.\r\n     *\r\n     * Observables are converted into promises\r\n     */\r\n    request$: Promise<T> | Observable<T>;\r\n}\r\n\r\nexport class ScheduleRequestAction<T> implements Action {\r\n    readonly type = scheduleRequestActionType;\r\n\r\n    constructor(public readonly payload: ScheduleRequestActionPayload<T>) {\r\n    }\r\n}\r\n\r\nexport const scheduleRequest = createAction(\r\n    scheduleRequestActionType,\r\n    props<ScheduleRequestActionPayload<any>>()\r\n);\r\n\r\nexport const registerRequestActionType = \"[Request] Register\";\r\n\r\nexport const registerRequest = createAction(registerRequestActionType);\r\n\r\nexport const unregisterRequestActionType = \"[Request] Unregister\";\r\n\r\nexport const unregisterRequest = createAction(unregisterRequestActionType);\r\n\r\nexport const resetRequestsActionType = \"[Request] Reset\";\r\n\r\nexport const resetRequests = createAction(resetRequestsActionType);\r\n","import { RequestState } from \"../models/request-state.model\";\r\nimport {\r\n    registerRequestActionType,\r\n    resetRequestsActionType,\r\n    unregisterRequestActionType\r\n} from \"../actions/request.actions\";\r\nimport { Action } from \"@ngrx/store\";\r\n\r\nexport const requestReducer = (state: RequestState = {pendingRequests: 0}, action: Action): RequestState => {\r\n    switch (action.type) {\r\n\r\n        case registerRequestActionType: {\r\n            return {\r\n                pendingRequests: state.pendingRequests + 1\r\n            };\r\n        }\r\n\r\n        case unregisterRequestActionType: {\r\n            return {\r\n                pendingRequests: state.pendingRequests - 1\r\n            };\r\n        }\r\n\r\n        case resetRequestsActionType: {\r\n            return {\r\n                pendingRequests: 0\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import { ActionReducerMap } from \"@ngrx/store\";\r\nimport { FactoryProvider, InjectionToken } from \"@angular/core\";\r\nimport { requestReducer } from \"./request.reducer\";\r\nimport { RequestStoreState } from \"../models/request-store-state.model\";\r\n\r\nexport const requestStoreReducerImpl: ActionReducerMap<RequestStoreState> = {\r\n    requests: requestReducer\r\n\r\n};\r\n\r\nexport const requestStoreReducer = new InjectionToken<RequestStoreState>(\"RequestStoreReducer\");\r\n\r\nexport function requestStoreReducerFactory(): ActionReducerMap<RequestStoreState> {\r\n    return requestStoreReducerImpl;\r\n}\r\n\r\nexport const requestStoreReducerProviders = [{\r\n    provide: requestStoreReducer,\r\n    useFactory: requestStoreReducerFactory\r\n} as FactoryProvider];\r\n","import { Observable, Observer, from, empty } from \"rxjs\";\r\nimport { tap, defaultIfEmpty, first, catchError } from \"rxjs/operators\";\r\n\r\nexport interface ObserveRequestPayload<T> {\r\n    request$: Promise<T> | Observable<T>;\r\n    observer: Observer<T>;\r\n}\r\n\r\n/**\r\n * Observes a promise or observable based\r\n * request\r\n *\r\n * Allows intercepting value and error events\r\n * with a custom observer\r\n */\r\nexport function observeRequest<T>(payload: ObserveRequestPayload<T>): Promise<T> {\r\n\r\n    const request = payload.request$;\r\n\r\n    let obs$: Observable<any>;\r\n\r\n    if (request instanceof Promise) {\r\n        obs$ = from(request as Promise<any>);\r\n    } else {\r\n        obs$ = request as Observable<any>;\r\n    }\r\n\r\n    let interceptedObs$ = obs$;\r\n\r\n    interceptedObs$ = interceptedObs$.pipe(\r\n        tap(payload.observer),\r\n        catchError((err, caught) => {\r\n            return empty();\r\n        }),\r\n        defaultIfEmpty(null)\r\n    );\r\n\r\n    return interceptedObs$.pipe(\r\n        first()\r\n    ).toPromise();\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observer } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Effect, ofType } from \"@ngrx/effects\";\r\nimport { concatMap } from \"rxjs/operators\";\r\nimport { Actions } from \"@ngrx/effects\";\r\nimport {\r\n    registerRequest, scheduleRequest, unregisterRequest,\r\n} from \"../actions/request.actions\";\r\nimport { RequestStoreState } from \"../models/request-store-state.model\";\r\nimport { observeRequest } from \"../functions/observe-request.function\";\r\n\r\n@Injectable()\r\nexport class RequestEffects {\r\n\r\n    /**\r\n     * A request-processing queue that processes requests\r\n     * in the order they arrive and keeps track of how\r\n     * many requests are currently running\r\n     */\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    scheduleRequest$ = this.actions$\r\n        .pipe(\r\n            ofType(scheduleRequest),\r\n            concatMap(action => {\r\n\r\n                    return observeRequest({\r\n                        request$: action.request$,\r\n                        observer: this.getRequestObserver()\r\n                    });\r\n\r\n                }\r\n            )\r\n        );\r\n\r\n    private getRequestObserver(): Observer<any> {\r\n        this.store.dispatch(registerRequest());\r\n\r\n        let isAlreadyUnregistered = false;\r\n\r\n        const onObserved = () => {\r\n            if (!isAlreadyUnregistered) {\r\n                isAlreadyUnregistered = true;\r\n                this.store.dispatch(unregisterRequest());\r\n            }\r\n        };\r\n\r\n        return {\r\n            next: onObserved,\r\n            error: () => {\r\n                onObserved();\r\n            },\r\n            complete: onObserved\r\n        };\r\n    }\r\n\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly store: Store<RequestStoreState>\r\n    ) {\r\n    }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { requestStoreFeature } from \"./models/request-store-state.model\";\r\nimport { requestStoreReducer, requestStoreReducerProviders } from \"./reducers/reducer\";\r\nimport { RequestEffects } from \"./effects/request.effects\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        StoreModule.forFeature(requestStoreFeature, requestStoreReducer),\r\n\r\n        EffectsModule.forFeature([\r\n            RequestEffects\r\n        ])\r\n    ],\r\n    providers: [\r\n        requestStoreReducerProviders,\r\n\r\n        RequestEffects\r\n    ]\r\n})\r\nexport class DgpRequestStoreModule {\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const showLoadingSpinner = createAction(\"[RoutingOverlay] ShowSpinner\", props<{ readonly showSpinner: boolean }>());\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"dgp-routing-overlay\",\r\n    template: \"<mat-progress-bar mode='indeterminate' style='height: 16px;'></mat-progress-bar>\",\r\n    styles: [`\r\n        :host {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            flex-grow: 1;\r\n            height: 100%;\r\n        }\r\n    `]\r\n})\r\nexport class RoutingOverlayComponent {\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { distinctUntilKeyChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { timer, of } from \"rxjs\";\r\nimport { ActivationStart, NavigationCancel, NavigationEnd, NavigationError, Router } from \"@angular/router\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { showLoadingSpinner } from \"../actions/routing-overlay.actions\";\r\nimport { RoutingOverlayComponent } from \"../components/routing-overlay.component\";\r\n\r\n@Injectable()\r\nexport class RoutingOverlayEffects {\r\n\r\n    private dialogRef: MatDialogRef<any>;\r\n\r\n    @Effect()\r\n    readonly observeRouteEvents$ = this.router.events.pipe(\r\n        map(event => {\r\n            if (event instanceof ActivationStart) {\r\n                return showLoadingSpinner({ showSpinner: true });\r\n            }\r\n            if (event instanceof NavigationEnd\r\n                || event instanceof NavigationCancel\r\n                || event instanceof NavigationError) {\r\n                return showLoadingSpinner({ showSpinner: false });\r\n            }\r\n            return null;\r\n\r\n        }),\r\n        filter(event => !isNullOrUndefined(event))\r\n    );\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    readonly showLoadingSpinner$ = this.actions$.pipe(\r\n        ofType(showLoadingSpinner),\r\n        distinctUntilKeyChanged(\"showSpinner\"),\r\n        switchMap(action => {\r\n            if (action.showSpinner) {\r\n                return timer(500).pipe(\r\n                    tap(() => {\r\n                        this.dialogRef = this.matDialog.open(RoutingOverlayComponent, {\r\n                            disableClose: true,\r\n                            width: \"400px\",\r\n                            height: \"320px\"\r\n                        });\r\n                    })\r\n                );\r\n            } else {\r\n                return of(null).pipe(\r\n                    tap(() => {\r\n                        if (!isNullOrUndefined(this.dialogRef)) {\r\n                            this.dialogRef.close();\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n        })\r\n    );\r\n\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly router: Router,\r\n        private readonly matDialog: MatDialog\r\n    ) {\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { RoutingOverlayComponent } from \"./components/routing-overlay.component\";\r\nimport { RoutingOverlayEffects } from \"./effects/routing-overlay.effects\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatDialogModule,\r\n        MatProgressBarModule,\r\n        EffectsModule.forFeature([\r\n            RoutingOverlayEffects\r\n        ]),\r\n        MatProgressBarModule\r\n    ],\r\n    declarations: [\r\n        RoutingOverlayComponent\r\n    ],\r\n    entryComponents: [\r\n        RoutingOverlayComponent\r\n    ]\r\n})\r\nexport class DgpRoutingOverlayModule {\r\n}\r\n","import { Directive } from \"@angular/core\";\r\n\r\n@Directive({selector: \"[dgpTableCellEditor]\"})\r\nexport class DgpTableCelLEditorDirective {\r\n\r\n}\r\n","import { DialogPosition } from \"@angular/material/dialog\";\r\nimport { TableCellEditorSizes } from \"./models\";\r\n\r\nexport function computeTableCellEditorSizes(payload: {\r\n    readonly tableCellBoundingRect: ClientRect;\r\n    readonly window: Window;\r\n    readonly triggerButtonElement: HTMLElement;\r\n}): TableCellEditorSizes {\r\n\r\n    return {\r\n        offsetTop: (payload.tableCellBoundingRect.top + payload.triggerButtonElement.offsetHeight),\r\n        offsetLeft: payload.tableCellBoundingRect.left,\r\n        availableSpace: {\r\n            left: payload.tableCellBoundingRect.left,\r\n            right: payload.window.innerWidth - (payload.tableCellBoundingRect.left),\r\n            bottom: payload.window.innerHeight - (payload.tableCellBoundingRect.top + payload.triggerButtonElement.offsetHeight),\r\n            top: payload.window.innerHeight - payload.tableCellBoundingRect.top\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport function getDialogPositionFromTableCellEditorSizes(payload: {\r\n    readonly tableCellEditorSizes: TableCellEditorSizes;\r\n    readonly configureDialogWidth: number;\r\n}): DialogPosition {\r\n\r\n    let result: DialogPosition = {\r\n        top: payload.tableCellEditorSizes.offsetTop + \"px\",\r\n        left: payload.tableCellEditorSizes.offsetLeft + \"px\",\r\n        bottom: null,\r\n        right: null\r\n    };\r\n\r\n\r\n    if (payload.tableCellEditorSizes.availableSpace.right < payload.configureDialogWidth\r\n        && payload.tableCellEditorSizes.availableSpace.left >= payload.configureDialogWidth) {\r\n        result = {\r\n            ...result,\r\n            left: (payload.tableCellEditorSizes.availableSpace.right - payload.configureDialogWidth) + \"px\"\r\n        };\r\n    }\r\n\r\n    return result;\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    TemplateRef,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { DgpTableCelLEditorDirective } from \"../directives/table-cell-editor.directive\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n    computeTableCellEditorSizes,\r\n    getDialogPositionFromTableCellEditorSizes\r\n} from \"../functions\";\r\n\r\n@Component({\r\n    selector: \"dgp-table-cell\",\r\n    template: `\r\n\r\n        <button #triggerButton\r\n                mat-button\r\n                [disabled]=\"disabled\"\r\n                (click)=\"openCellEditorDialog()\"\r\n                class=\"mat-table-cell-editor-trigger-button\">\r\n            <ng-content></ng-content>\r\n        </button>\r\n\r\n    `,\r\n    styles: [`\r\n\r\n        dgp-table-cell {\r\n            display: flex;\r\n            flex-grow: 1;\r\n        }\r\n\r\n        .mat-table-cell-editor-trigger-button {\r\n            flex-grow: 1;\r\n            justify-content: flex-start;\r\n            padding: initial;\r\n            display: flex;\r\n            font-weight: initial;\r\n        }\r\n\r\n        .mat-table-cell-editor-trigger-button .mat-button-wrapper {\r\n            flex-grow: 1;\r\n            justify-content: flex-start;\r\n            display: flex;\r\n        }\r\n\r\n        .mat-dialog-no-backdrop {\r\n            background: initial;\r\n        }\r\n\r\n\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class DgpTableCellComponent {\r\n\r\n    @Input()\r\n    editDialogConfig: MatDialogConfig = {\r\n        width: \"240px\"\r\n    };\r\n\r\n    @Output()\r\n    readonly editorOpened = new EventEmitter();\r\n\r\n    @Output()\r\n    readonly editorClosed = new EventEmitter();\r\n\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    @Input()\r\n    scrollParentSelector: string;\r\n\r\n    @ContentChild(DgpTableCelLEditorDirective, {\r\n    read: TemplateRef\r\n})\r\n    editorTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild(\"triggerButton\", {\r\n    read: ElementRef\r\n}) buttonElRef: ElementRef;\r\n\r\n    private dialogRef: MatDialogRef<any>;\r\n\r\n    constructor(private readonly matDialog: MatDialog) {\r\n    }\r\n\r\n    async openCellEditorDialog() {\r\n\r\n        this.editorOpened.emit();\r\n\r\n        const triggerButtonElement = this.buttonElRef.nativeElement as HTMLElement;\r\n        const configureDialogWidth = +this.editDialogConfig.width.replace(\"px\", \"\");\r\n        const tableCellBoundingRect = this.buttonElRef.nativeElement.getBoundingClientRect() as ClientRect;\r\n\r\n        const tableCellEditorSizes = computeTableCellEditorSizes({\r\n            tableCellBoundingRect, triggerButtonElement, window: window\r\n        });\r\n\r\n        const position = getDialogPositionFromTableCellEditorSizes({\r\n            tableCellEditorSizes, configureDialogWidth\r\n        });\r\n\r\n        this.dialogRef = this.matDialog.open(this.editorTemplate, {\r\n            ...this.editDialogConfig,\r\n            position,\r\n            backdropClass: \"mat-dialog-no-backdrop\",\r\n        });\r\n\r\n        await this.dialogRef.afterClosed().toPromise();\r\n\r\n        this.dialogRef = null;\r\n        this.editorClosed.emit();\r\n    }\r\n\r\n    closeCellEditorDialog() {\r\n        if (this.dialogRef) {\r\n            this.dialogRef.close();\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { DgpTableCelLEditorDirective } from \"./directives/table-cell-editor.directive\";\r\nimport { DgpTableCellComponent } from \"./components/table-cell.component\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatDialogModule\r\n    ],\r\n    declarations: [\r\n        DgpTableCellComponent,\r\n        DgpTableCelLEditorDirective\r\n    ],\r\n    exports: [\r\n        DgpTableCellComponent,\r\n        DgpTableCelLEditorDirective\r\n    ]\r\n})\r\nexport class DgpTableCellModule {\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const toggleDarkMode = createAction(\"[ThemeSwitcher] ToggleDarkMode\");\r\nexport const setIsDarkModeActive = createAction(\"[ThemeSwitcher] SetIsDarkModeActive\", props<{ readonly isDarkModeActive: boolean }>());\r\n","export const themeSwitcherStoreFeature = \"ThemeSwitcher\";\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { themeSwitcherStoreFeature } from \"../models/theme-switcher-store-feature.model\";\r\nimport { ThemeSwitcherState } from \"../models/theme-switcher-state.model\";\r\n\r\nexport const themeSwitcherFeatureSelector = createFeatureSelector<ThemeSwitcherState>(\r\n    themeSwitcherStoreFeature\r\n);\r\n\r\nexport const isDarkModeActiveSelector = createSelector(\r\n    themeSwitcherFeatureSelector, x => x.useDarkMode\r\n);\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { isDarkModeActiveSelector } from \"../selectors/theme-switcher.selectors\";\r\nimport { ThemeSwitcherState } from \"../models/theme-switcher-state.model\";\r\nimport { toggleDarkMode } from \"../actions/theme-switcher.actions\";\r\n\r\n@Component({\r\n    selector: \"dgp-dark-mode-toggle\",\r\n    template: `\r\n        <mat-slide-toggle [ngModel]=\"useDarkMode$ | async\"\r\n                          (ngModelChange)=\"toggleDarkMode()\">\r\n            Use dark mode\r\n        </mat-slide-toggle>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            margin-left: 16px;\r\n            margin-right: 16px;\r\n        }\r\n    `],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class DarkModeToggleComponent {\r\n\r\n    readonly useDarkMode$ = this.store.select(isDarkModeActiveSelector);\r\n\r\n    constructor(\r\n        private readonly store: Store<ThemeSwitcherState>\r\n    ) {\r\n    }\r\n\r\n    toggleDarkMode(): void {\r\n        this.store.dispatch(toggleDarkMode());\r\n    }\r\n\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface ThemeSwitcherConfig {\r\n    readonly darkThemeClassName: string;\r\n}\r\n\r\nexport const defaultThemeSwitcherConfig: ThemeSwitcherConfig = {\r\n    darkThemeClassName: \"dark-theme\"\r\n};\r\n\r\nexport const THEME_SWITCHER_CONFIG = new InjectionToken<ThemeSwitcherConfig>(\"ThemeSwitcherConfig\");\r\n","import { Directive, ElementRef, Inject, Renderer2 } from \"@angular/core\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { OverlayContainer } from \"@angular/cdk/overlay\";\r\nimport { ThemeSwitcherState } from \"../models/theme-switcher-state.model\";\r\nimport { THEME_SWITCHER_CONFIG, ThemeSwitcherConfig } from \"../models/theme-switcher-config.model\";\r\nimport { isDarkModeActiveSelector } from \"../selectors/theme-switcher.selectors\";\r\n\r\n@Directive({\r\n    selector: \"[dgpThemeHost]\",\r\n})\r\nexport class ThemeHostDirective {\r\n\r\n    constructor(\r\n        private readonly elRef: ElementRef,\r\n        private readonly renderer: Renderer2,\r\n        private readonly store: Store<ThemeSwitcherState>,\r\n        @Inject(THEME_SWITCHER_CONFIG)\r\n        private readonly config: ThemeSwitcherConfig,\r\n        private readonly overlayContainer: OverlayContainer\r\n    ) {\r\n\r\n        this.store.pipe(\r\n            select(isDarkModeActiveSelector)\r\n        ).subscribe(isDarkModeActive => {\r\n\r\n            if (isDarkModeActive) {\r\n                this.renderer.addClass(elRef.nativeElement, this.config.darkThemeClassName);\r\n                this.overlayContainer.getContainerElement().classList.add(this.config.darkThemeClassName);\r\n            } else {\r\n                this.renderer.removeClass(elRef.nativeElement, this.config.darkThemeClassName);\r\n                this.overlayContainer.getContainerElement().classList.remove(this.config.darkThemeClassName);\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\r\nimport {first, switchMap, tap} from \"rxjs/operators\";\r\nimport {select, Store} from \"@ngrx/store\";\r\nimport { toggleDarkMode } from \"../actions/theme-switcher.actions\";\r\nimport { isDarkModeActiveSelector } from \"../selectors/theme-switcher.selectors\";\r\nimport { ThemeSwitcherState } from \"../models/theme-switcher-state.model\";\r\n\r\n@Injectable()\r\nexport class ThemeSwitcherEffects {\r\n\r\n    @Effect({\r\n        dispatch: false\r\n    })\r\n    readonly toggleDarkMode$ = this.actions$.pipe(\r\n        ofType(toggleDarkMode),\r\n        switchMap(() => {\r\n\r\n            return this.store.pipe(\r\n                select(isDarkModeActiveSelector),\r\n                first(),\r\n                tap(isDarkModeActive => {\r\n                    localStorage.setItem(\"isDarkModeActive\", JSON.stringify(isDarkModeActive));\r\n                })\r\n            );\r\n\r\n        })\r\n    );\r\n\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly store: Store<ThemeSwitcherState>,\r\n    ) {\r\n    }\r\n\r\n}\r\n","import { FactoryProvider, InjectionToken } from \"@angular/core\";\r\nimport { ActionReducer, createReducer, on } from \"@ngrx/store\";\r\nimport { ThemeSwitcherState } from \"../models/theme-switcher-state.model\";\r\nimport { setIsDarkModeActive, toggleDarkMode } from \"../actions/theme-switcher.actions\";\r\n\r\nexport const initialThemeSwitcherState: ThemeSwitcherState = {\r\n    useDarkMode: false\r\n};\r\n\r\nexport const themeSwitcherReducerImpl = createReducer(initialThemeSwitcherState,\r\n    on(setIsDarkModeActive, (state, action) => {\r\n        return {\r\n            ...state,\r\n            useDarkMode: action.isDarkModeActive\r\n        };\r\n    }),\r\n    on(toggleDarkMode, (state) => {\r\n        return {\r\n            ...state,\r\n            useDarkMode: !state.useDarkMode\r\n        };\r\n    })\r\n);\r\n\r\nexport const themeSwitcherReducer = new InjectionToken<ActionReducer<ThemeSwitcherState>>(\"ThemeSwitcherReducer\");\r\n\r\nexport function themeSwitcherReducerFactory() {\r\n    return themeSwitcherReducerImpl;\r\n}\r\n\r\nexport const themeSwitcherReducerProvider: FactoryProvider = {\r\n    provide: themeSwitcherReducer,\r\n    useFactory: themeSwitcherReducerFactory\r\n};\r\n\r\n","import { ModuleWithProviders, NgModule, ValueProvider } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Store, StoreModule } from \"@ngrx/store\";\r\nimport { themeSwitcherStoreFeature } from \"./models/theme-switcher-store-feature.model\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { ThemeSwitcherEffects } from \"./effects/theme-switcher.effects\";\r\nimport { themeSwitcherReducer, themeSwitcherReducerProvider } from \"./reducers/theme-switcher.reducer\";\r\nimport { ThemeHostDirective } from \"./directives/theme-host.directive\";\r\nimport { DarkModeToggleComponent } from \"./components/dark-mode-toggle.component\";\r\nimport {\r\n    defaultThemeSwitcherConfig,\r\n    THEME_SWITCHER_CONFIG,\r\n    ThemeSwitcherConfig\r\n} from \"./models/theme-switcher-config.model\";\r\nimport { ThemeSwitcherState } from \"./models/theme-switcher-state.model\";\r\nimport { setIsDarkModeActive } from \"./actions/theme-switcher.actions\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        OverlayModule,\r\n\r\n        MatSlideToggleModule,\r\n\r\n        StoreModule.forFeature(themeSwitcherStoreFeature, themeSwitcherReducer),\r\n        EffectsModule.forFeature([\r\n            ThemeSwitcherEffects\r\n        ])\r\n    ],\r\n    declarations: [\r\n        DarkModeToggleComponent,\r\n        ThemeHostDirective\r\n    ],\r\n    exports: [\r\n        DarkModeToggleComponent,\r\n        ThemeHostDirective\r\n    ],\r\n    providers: [\r\n        themeSwitcherReducerProvider\r\n    ]\r\n})\r\nexport class DgpThemeSwitcherModule {\r\n\r\n    static forRoot(config: ThemeSwitcherConfig = defaultThemeSwitcherConfig): ModuleWithProviders<DgpThemeSwitcherModule> {\r\n\r\n        return {\r\n            ngModule: DgpThemeSwitcherModule,\r\n            providers: [{\r\n                provide: THEME_SWITCHER_CONFIG,\r\n                useValue: config as ThemeSwitcherConfig\r\n            } as ValueProvider]\r\n        };\r\n    }\r\n\r\n    constructor(\r\n        private readonly store: Store<ThemeSwitcherState>\r\n    ) {\r\n        const isDarkModeActiveJSON = localStorage.getItem(\"isDarkModeActive\");\r\n        if (!isNullOrUndefined(isDarkModeActiveJSON)) {\r\n            const isDarkModeActive = JSON.parse(isDarkModeActiveJSON);\r\n            this.store.dispatch(setIsDarkModeActive({ isDarkModeActive }));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Directive } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Action, Selector } from \"entity-store\";\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class DgpContainer<TState = any> {\r\n\r\n    constructor(\r\n        protected readonly store: Store<TState>\r\n    ) {\r\n    }\r\n\r\n    readonly dispatch = (x: Action) => this.store.dispatch(x);\r\n\r\n    readonly select = <TV>(x: Selector<TState, TV>) => this.store.select(x);\r\n\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from \"@angular/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n/**\r\n * Base class for classes for manipulating a model\r\n */\r\n@Directive()\r\nexport abstract class DgpModelEditorComponentBase<TModel> {\r\n\r\n    protected modelValue: TModel;\r\n\r\n    @Input()\r\n    get model(): TModel {\r\n        return this.modelValue;\r\n    }\r\n\r\n    set model(value: TModel) {\r\n\r\n        if (_.isEqual(value, this.modelValue)) { return; }\r\n\r\n        this.modelValue = value;\r\n\r\n    }\r\n\r\n    @Output()\r\n    readonly modelChange = new EventEmitter<TModel>();\r\n\r\n    setModel(value: TModel) {\r\n        this.model = value;\r\n        this.modelChange.emit(this.model);\r\n    }\r\n\r\n    updateModel(value: Partial<TModel>) {\r\n\r\n        if ((value !== null && typeof value === \"object\") || (this.model !== null && typeof this.model === \"object\")) {\r\n            this.model = {\r\n                ...this.model as any,\r\n                ...value as any\r\n            };\r\n        } else {\r\n            this.model = value as TModel;\r\n        }\r\n\r\n        this.modelChange.emit(this.model);\r\n\r\n    }\r\n\r\n}\r\n","import { composeEntityActions, EntityTypeMap } from \"entity-store\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nexport interface SelectEntityViaRouteResolverConfig<TEntityTypeMap extends EntityTypeMap, TStoreFeature = null> {\r\n    readonly getNewEntitySurrogateKeyFromRoute: (route: ActivatedRouteSnapshot) => Promise<string>;\r\n    readonly getOldEntitySurrogateKeyFromStore: () => Promise<string>;\r\n    readonly entityName: keyof TEntityTypeMap;\r\n    readonly storeFeature?: TStoreFeature;\r\n}\r\n\r\nexport abstract class DgpSelectEntityViaRouteResolver<TEntityTypeMap extends EntityTypeMap, TStoreFeature = null> implements Resolve<void> {\r\n\r\n    protected constructor(\r\n        protected readonly store: Store<any>,\r\n        private readonly config: SelectEntityViaRouteResolverConfig<TEntityTypeMap, TStoreFeature>\r\n    ) {\r\n    }\r\n\r\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<void> {\r\n\r\n        const newSelectionIdFromRoute = await this.config.getNewEntitySurrogateKeyFromRoute(route);\r\n        const oldSelectionIdFromStore = await this.config.getOldEntitySurrogateKeyFromStore();\r\n\r\n        if (!oldSelectionIdFromStore && !newSelectionIdFromRoute) {\r\n            return;\r\n        }\r\n\r\n        if (oldSelectionIdFromStore === newSelectionIdFromRoute) {\r\n            return;\r\n        }\r\n\r\n        this.store.dispatch(\r\n            composeEntityActions({\r\n                select: {\r\n                    [this.config.entityName]: [newSelectionIdFromRoute]\r\n                },\r\n                storeFeature: this.config.storeFeature\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Directive } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[dgpVirtualListItem]\"\r\n})\r\nexport class VirtualListItemDirective {}\r\n","import {\r\n    Component,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n    TemplateRef,\r\n    ContentChild,\r\n    Renderer2,\r\n    AfterViewInit, ElementRef\r\n} from \"@angular/core\";\r\nimport { VirtualListItemDirective } from \"../directives/virtual-list-item.directive\";\r\n\r\n@Component({\r\n    selector: \"dgp-virtual-list-panel\",\r\n    template: `\r\n        <cdk-virtual-scroll-viewport [itemSize]=\"itemSize\"\r\n                                     style=\"height: 100%; width:100%;\">\r\n            <ng-container *cdkVirtualFor=\"let item of items\">\r\n                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\r\n            </ng-container>\r\n        </cdk-virtual-scroll-viewport>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class VirtualListPanelComponent implements AfterViewInit {\r\n\r\n    @Input()\r\n    itemSize = 48;\r\n\r\n    @Input()\r\n    items: ReadonlyArray<any>;\r\n\r\n    @ContentChild(VirtualListItemDirective, { read: TemplateRef })\r\n    itemTemplate: TemplateRef<any>;\r\n\r\n    constructor(\r\n        private readonly elementRef: ElementRef,\r\n        private readonly renderer: Renderer2\r\n    ) {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        const parentNode = this.renderer.parentNode(this.elementRef.nativeElement);\r\n        this.renderer.setStyle(parentNode, \"flex-grow\", 1);\r\n        this.renderer.setStyle(parentNode, \"overflow\", \"auto\");\r\n        this.renderer.setStyle(parentNode, \"height\", \"100%\");\r\n    }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\r\nimport { VirtualListItemDirective } from \"./directives/virtual-list-item.directive\";\r\nimport { VirtualListPanelComponent } from \"./components/virtual-list-panel.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ScrollingModule\r\n    ],\r\n    declarations: [\r\n        VirtualListPanelComponent,\r\n        VirtualListItemDirective\r\n    ],\r\n    exports: [\r\n        VirtualListPanelComponent,\r\n        VirtualListItemDirective\r\n    ]\r\n})\r\nexport class DgpVirtualListPanelModule {\r\n}\r\n","import { InjectionToken, ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { ActionReducerMap, StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { DgpHamburgerShellModule } from \"./hamburger-shell/hamburger-shell.module\";\r\nimport { DgpRequestStoreModule } from \"./request-store/request-store.module\";\r\nimport { DgpRoutingOverlayModule } from \"./routing-overlay/routing-overlay.module\";\r\nimport { DgpThemeSwitcherModule } from \"./theme-switcher/theme-switcher.module\";\r\nimport { hmrReducer } from \"./hmr/hmr.reducer\";\r\nimport { DgpLogModule } from \"./log/log.module\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nexport interface DgpNgAppConfig<TAppState> {\r\n    readonly appReducer: ActionReducerMap<TAppState>;\r\n}\r\n\r\nexport const appReducer = new InjectionToken<ActionReducerMap<any>>(\"AppReducer\");\r\n\r\n@NgModule({\r\n    imports: [\r\n\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n\r\n\r\n        StoreModule.forRoot(appReducer, {\r\n            metaReducers: [hmrReducer]\r\n        }),\r\n        EffectsModule.forRoot([]),\r\n\r\n        DgpHamburgerShellModule.forRoot(),\r\n        DgpThemeSwitcherModule.forRoot(),\r\n        DgpLogModule,\r\n        DgpRequestStoreModule,\r\n        DgpRoutingOverlayModule\r\n    ],\r\n    exports: [\r\n        DgpHamburgerShellModule,\r\n        DgpThemeSwitcherModule\r\n    ]\r\n})\r\nexport class DgpNgAppModule {\r\n\r\n    static forRoot<TAppState>(config: DgpNgAppConfig<TAppState>): ModuleWithProviders<DgpNgAppModule> {\r\n\r\n        return {\r\n            ngModule: DgpNgAppModule,\r\n            providers: [{\r\n                provide: appReducer,\r\n                useValue: config.appReducer\r\n            }]\r\n        };\r\n    }\r\n\r\n}\r\n","/*\r\n * Public API Surface of dgp-ng-app\r\n */\r\n\r\n// authentication\r\nexport * from \"./authentication/actions/authentication.actions\";\r\nexport * from \"./authentication/api-clients/authentication.api-client\";\r\nexport * from \"./authentication/guards/authentication.guard\";\r\nexport * from \"./authentication/models/authentication-result.model\";\r\nexport * from \"./authentication/models/authentication-store-feature\";\r\nexport * from \"./authentication/models/post-authentication-task.model\";\r\nexport * from \"./authentication/selectors/authentication.selectors\";\r\nexport * from \"./authentication/services/authentication.service\";\r\nexport * from \"./authentication/services/initialization.service\";\r\nexport * from \"./authentication/authentication.module\";\r\n\r\n// broadcast\r\nexport * from \"./broadcast/actions/broadcast-channel.actions\";\r\nexport * from \"./broadcast/guards/no-peon.guard\";\r\nexport * from \"./broadcast/functions/create-guid.function\";\r\nexport * from \"./broadcast/models/broadcast-role.model\";\r\nexport * from \"./broadcast/models/broadcast-channel.model\";\r\nexport * from \"./broadcast/models/broadcast-config.model\";\r\nexport * from \"./broadcast/models/broadcast-heartbeat.model\";\r\nexport * from \"./broadcast/models/broadcast-participant.model\";\r\nexport * from \"./broadcast/models/broadcast-role.model\";\r\nexport * from \"./broadcast/models/broadcast-role-display-config.model\";\r\nexport * from \"./broadcast/broadcast-store\";\r\nexport * from \"./broadcast/broadcast-store.module\";\r\n\r\n// empty-state\r\nexport * from \"./empty-state/components/empty-state.component\";\r\nexport * from \"./empty-state/empty-state.module\";\r\n\r\n// file-upload\r\nexport * from \"./file-viewer/models\";\r\nexport * from \"./file-viewer/functions\";\r\nexport * from \"./file-viewer/components/fallback-file-viewer.component\";\r\nexport * from \"./file-viewer/components/file-item-list.component\";\r\nexport * from \"./file-viewer/components/file-viewer.component-base\";\r\nexport * from \"./file-viewer/components/file-viewer.component\";\r\nexport * from \"./file-viewer/components/dynamic-file-viewer.component\";\r\nexport * from \"./file-viewer/components/jpg-viewer.component\";\r\nexport * from \"./file-viewer/components/pdf-viewer.component\";\r\nexport * from \"./file-viewer/components/png-viewer.component\";\r\nexport * from \"./file-viewer/components/svg-viewer.component\";\r\nexport * from \"./file-viewer/file-viewer.module\";\r\n\r\n// file-upload\r\nexport * from \"./file-upload/actions\";\r\nexport * from \"./file-upload/directive/drag-file-listener.directive\";\r\nexport * from \"./file-upload/directive/open-file-manager-via-short-key.directive\";\r\nexport * from \"./file-upload/functions\";\r\nexport * from \"./file-upload/models\";\r\nexport { fileUploadEntityStore } from \"./file-upload/store\";\r\nexport * from \"./file-upload/file-upload.module\";\r\n\r\n// hamburger-shell\r\nexport * from \"./hamburger-shell/actions/hamburger-shell.actions\";\r\nexport * from \"./hamburger-shell/components/hamburger-shell.component\";\r\nexport * from \"./hamburger-shell/components/hamburger-menu-toggle/hamburger-menu-toggle.component\";\r\nexport * from \"./hamburger-shell/components/hamburger-menu-toggle/hamburger-menu-toggle.module\";\r\nexport * from \"./hamburger-shell/components/list-details-page/list-details-page-content.component\";\r\nexport * from \"./hamburger-shell/components/list-details-page/list-details-page.component\";\r\nexport * from \"./hamburger-shell/components/list-details-page/list-details-page.module\";\r\nexport * from \"./hamburger-shell/components/page-header/page-header.component\";\r\nexport * from \"./hamburger-shell/components/page-header/page-header.module\";\r\nexport * from \"./hamburger-shell/models/hamburger-shell.store-feature\";\r\nexport * from \"./hamburger-shell/models/hamburger-shell-config.model\";\r\nexport * from \"./hamburger-shell/models/hamburger-shell-config-provider.model\";\r\nexport * from \"./hamburger-shell/models/hamburger-shell-state.model\";\r\nexport * from \"./hamburger-shell/selectors/hamburger-shell.selectors\";\r\nexport * from \"./hamburger-shell/hamburger-shell.module\";\r\n\r\n// hmr\r\nexport { hotReload } from \"./hmr/hmr.actions\";\r\nexport { hmrReducer } from \"./hmr/hmr.reducer\";\r\nexport { DgpNgApp } from \"./hmr/hmr-app\";\r\n\r\n// log\r\nexport { addLogEntry, logError, LogErrorAction, logErrorActionType } from \"./log/actions/log.actions\";\r\nexport { LogEntry, Severity } from \"./log/models/log.models\";\r\nexport { LogState, logStoreFeature } from \"./log/models/log.models\";\r\nexport { DgpLogModule } from \"./log/log.module\";\r\n\r\n// request-store\r\nexport { requestStoreFeature } from \"./request-store/models/request-store-state.model\";\r\nexport { RequestState } from \"./request-store/models/request-state.model\";\r\nexport {\r\n    ScheduleRequestAction, scheduleRequest, scheduleRequestActionType\r\n} from \"./request-store/actions/request.actions\";\r\nexport {\r\n    hasPendingRequestsSelector, hasPendingRequests, requestStateSelector\r\n} from \"./request-store/selectors/request.selectors\";\r\nexport { DgpRequestStoreModule } from \"./request-store/request-store.module\";\r\n\r\n// routing-overlay\r\nexport * from \"./routing-overlay/actions/routing-overlay.actions\";\r\nexport { DgpRoutingOverlayModule } from \"./routing-overlay/routing-overlay.module\";\r\n\r\n// spacer\r\nexport { SpacerComponent } from \"./spacer/components/spacer.component\";\r\nexport { DgpSpacerModule } from \"./spacer/spacer.module\";\r\n\r\n// table-cell\r\nexport { DgpTableCellComponent } from \"./table-cell-editor/components/table-cell.component\";\r\nexport { DgpTableCelLEditorDirective } from \"./table-cell-editor/directives/table-cell-editor.directive\";\r\nexport { DgpTableCellModule } from \"./table-cell-editor/table-cell.module\";\r\n\r\n// theme-switcher\r\nexport * from \"./theme-switcher/actions/theme-switcher.actions\";\r\nexport { DarkModeToggleComponent } from \"./theme-switcher/components/dark-mode-toggle.component\";\r\nexport { ThemeHostDirective } from \"./theme-switcher/directives/theme-host.directive\";\r\nexport { themeSwitcherStoreFeature } from \"./theme-switcher/models/theme-switcher-store-feature.model\";\r\nexport { ThemeSwitcherConfig } from \"./theme-switcher/models/theme-switcher-config.model\";\r\nexport { ThemeSwitcherState } from \"./theme-switcher/models/theme-switcher-state.model\";\r\nexport {\r\n    themeSwitcherFeatureSelector, isDarkModeActiveSelector\r\n} from \"./theme-switcher/selectors/theme-switcher.selectors\";\r\nexport { DgpThemeSwitcherModule } from \"./theme-switcher/theme-switcher.module\";\r\n\r\n// utils\r\nexport { DgpContainer } from \"./utils/container.component-base\";\r\nexport { DgpModelEditorComponentBase } from \"./utils/model-editor.component-base\";\r\nexport * from \"./utils/select-entity-via-route.resolver-base\";\r\n\r\n// virtual-list panel\r\nexport { VirtualListItemDirective } from \"./virtual-list-panel/directives/virtual-list-item.directive\";\r\nexport { VirtualListPanelComponent } from \"./virtual-list-panel/components/virtual-list-panel.component\";\r\nexport { DgpVirtualListPanelModule } from \"./virtual-list-panel/virtual-list-panel.module\";\r\n\r\nexport * from \"./dgp-ng-app.module\";\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {authenticationReducer as Éµm,authenticationReducerFactory as Éµn,authenticationReducerImpl as Éµl,authenticationReducerProvider as Éµo,initialAuthenticationState as Éµk} from './authentication/reducers/authentication.reducer';\nexport {appInitializer as Éµp,appInitializerProvider as Éµq} from './authentication/services/app-initializer.function';\nexport {BroadcastStoreDecorator as Éµv,broadcastStoreProvider as Éµw} from './broadcast/broadcast-store.decorator';\nexport {BroadcastEffects as Éµr} from './broadcast/effects/broadcast.effects';\nexport {BroadcastChannelService as Éµs,BroadcastChannelServiceImpl as Éµt,broadcastChannelServiceProvider as Éµu} from './broadcast/services/broadcast-channel.service';\nexport {EmptyStateContentComponent as Éµx} from './empty-state/components/empty-state-content.component';\nexport {EmptyStateIconComponent as Éµy} from './empty-state/components/empty-state-icon.component';\nexport {EmptyStateTitleComponent as Éµz} from './empty-state/components/empty-state-title.component';\nexport {FileManagerComponent as Éµbc} from './file-upload/containers/file-manager.component';\nexport {FileUploadEffects as Éµbb} from './file-upload/effects';\nexport {fileUploadReducer as Éµa,fileUploadReducerFactory as Éµc,fileUploadReducerImpl as Éµb,fileUploadReducerProvider as Éµd} from './file-upload/store';\nexport {SafePipe as Éµba} from './file-viewer/safe.pipe';\nexport {HamburgerShellEffects as Éµbh} from './hamburger-shell/effects/hamburger-shell.effects';\nexport {hamburgerShellReducer as Éµbe,hamburgerShellReducerFactory as Éµbf,hamburgerShellReducerImpl as Éµbd,hamburgerShellReducerProvider as Éµbg} from './hamburger-shell/reducers/hamburger-shell.reducer';\nexport {LogEntryDetailsComponent as Éµbk} from './log/components/log-entry-details.component';\nexport {LogEntryListComponent as Éµbl} from './log/components/log-entry-list.component';\nexport {LogPageComponent as Éµbj} from './log/components/log-page.component';\nexport {LogEffects as Éµbi} from './log/effects/log.effects';\nexport {createLogStoreReducer as Éµf,logStoreReducer as Éµe,logStoreReducerProvider as Éµg} from './log/log.module';\nexport {logStore as Éµbm} from './log/reducers/log.reducer';\nexport {RequestEffects as Éµbr} from './request-store/effects/request.effects';\nexport {RequestStoreState as Éµh} from './request-store/models/request-store-state.model';\nexport {requestStoreReducer as Éµbo,requestStoreReducerFactory as Éµbp,requestStoreReducerImpl as Éµbn,requestStoreReducerProviders as Éµbq} from './request-store/reducers/reducer';\nexport {requestReducer as Éµbs} from './request-store/reducers/request.reducer';\nexport {RoutingOverlayComponent as Éµbu} from './routing-overlay/components/routing-overlay.component';\nexport {RoutingOverlayEffects as Éµbt} from './routing-overlay/effects/routing-overlay.effects';\nexport {ThemeSwitcherEffects as Éµca} from './theme-switcher/effects/theme-switcher.effects';\nexport {THEME_SWITCHER_CONFIG as Éµj,defaultThemeSwitcherConfig as Éµi} from './theme-switcher/models/theme-switcher-config.model';\nexport {initialThemeSwitcherState as Éµbv,themeSwitcherReducer as Éµbx,themeSwitcherReducerFactory as Éµby,themeSwitcherReducerImpl as Éµbw,themeSwitcherReducerProvider as Éµbz} from './theme-switcher/reducers/theme-switcher.reducer';"]}